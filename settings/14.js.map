{"version":3,"sources":["webpack:///./api/callAPI.tsx","webpack:///./api/heating/index.tsx","webpack:///./components/AppHeader.tsx","webpack:///./components/ListItemLink.tsx","webpack:///./components/Menu.tsx","webpack:///./layouts/Page.tsx","webpack:///./components/BodyText.tsx","webpack:///./components/SubHeader.tsx","webpack:///./api/devices/index.tsx","webpack:///./api/zones/index.tsx","webpack:///./api/settings/index.tsx","webpack:///./api/suspendableState.tsx","webpack:///./api/hooks.tsx","webpack:///./pages/schedules.tsx"],"names":["callAPI","method","path","body","Promise","resolve","reject","Homey","api","err","result","updatePlan","newPlan","tslib__WEBPACK_IMPORTED_MODULE_0__","undefined","planCopy","Object","assign","zones","length","devices","_callAPI__WEBPACK_IMPORTED_MODULE_2__","id","planAPI","fetchPlans","res","lodash__WEBPACK_IMPORTED_MODULE_1__","plan","p","name","fetchPlanById","Error","fetchSchedule","schedule","temperatures","s","device","removePlan","togglePlanState","enabled","modeAPI","fetchMode","mode","setMode","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","__webpack_exports__","_theme","appBar","grow","flexGrow","buttons","display","toolbar","alignItems","justifyContent","props","classes","button","title","actions","subBar","children","a","createElement","position","color","className","variant","noWrap","createLink","_a","innerRef","tslib_es6","to","toString","match","react_default","onClick","openURL","Link","components_ListItemLink","index_es","component","Menu_styles","theme","text","padding","spacing","unit","paddingBottom","version","paddingTop","normal","selected","palette","primary","main","otherButton","firstButton","marginLeft","AppMenuButton","_props","openMenu","setOpenMenu","useState","Fragment","AppMenu","open","onClose","MenuButton","first","icon","Menu_default","withRouter","styles","elements","type","Translation","Drawer_default","gutterBottom","map","e","key","disabled","url","otherProps","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","root","webkitOverflowScrolling","flexFlow","height","width","backgroundColor","flex","margin","maxWidth","overflowY","header","newPadding","style","paddingLeft","paddingRight","react__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2___default","headline","marginTop","deviceAPI","fetchHeatingDevices","reduce","obj","idx","zoneAPI","fetchHeatingZones","settingsAPI","fetchSettings","_callAPI__WEBPACK_IMPORTED_MODULE_1__","updateSettings","settings","cache","Map","LOADING","useSuspendableState","provideState","provideFailed","val","get","state","setState","failed","setFailed","loadValue","set","apiMethod","setStateAction","tryMethod","r","catch","react","delete","[object Object]","charAt","toUpperCase","slice","d","usePlans","useDevices","useZones","useScheduleInformation","useSettings","useMode","heating","notistack__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","_api_hooks__WEBPACK_IMPORTED_MODULE_4__","_components_AppHeader__WEBPACK_IMPORTED_MODULE_5__","_components_BodyText__WEBPACK_IMPORTED_MODULE_6__","_components_Menu__WEBPACK_IMPORTED_MODULE_7__","_components_SubHeader__WEBPACK_IMPORTED_MODULE_8__","_i18n_Translation__WEBPACK_IMPORTED_MODULE_9__","_layouts_Page__WEBPACK_IMPORTED_MODULE_10__","Chart","lazy","all","then","bind","list","marginBottom","plans"],"mappings":"wIAAe,SAAeA,EAAWC,EAAgBC,EAAcC,EAAY,gDAE3E,aAAa,IAAIC,QAAW,CAACC,EAASC,KAClCC,MAAMC,IAAIP,EAAQC,EAAMC,EAAM,CAACM,EAAUC,KACjCD,EAAOH,EAAOG,GAAeJ,EAAQK,0ICCzD,MAkBMC,EAAoBC,GAAiDC,EAAA,OAAAC,OAAA,qBACzE,MAAMC,EAAQC,OAAAC,OAAA,GAAOL,GAKrB,OAHKG,EAASG,OAAmC,IAA1BH,EAASG,MAAMC,SAAgBJ,EAASG,WAAQJ,GAClEC,EAASK,SAAuC,IAA5BL,EAASK,QAAQD,SAAgBJ,EAASK,aAAUN,SAEhEE,OAAAK,EAAA,EAAAL,CAAsB,gBAAiBJ,EAAQU,KAAMP,KAiCvDQ,EAAU,CACrBC,WA1DiB,IAAqCX,EAAA,OAAAC,OAAA,qBACtD,MAAMW,QAAYT,OAAAK,EAAA,EAAAL,CAAwB,MAAO,UAEjD,OAAOA,OAAAU,EAAA,OAAAV,CAAOA,OAAAU,EAAA,IAAAV,CAAIS,EAAME,IACtBA,EAAKT,MAAQS,EAAKT,OAAS,GAC3BS,EAAKP,QAAUO,EAAKP,SAAW,GAExBO,IACJC,GAAMA,EAAEC,QAmDbC,cA5B2BR,GAAsCT,EAAA,OAAAC,OAAA,qBACjE,MAAMa,QAAaX,OAAAK,EAAA,EAAAL,CAAsB,gBAAiBM,KAC1D,GAAY,MAARK,EAAgB,MAAM,IAAII,cAAcT,gBAK5C,OAHAK,EAAKT,MAAQS,EAAKT,OAAS,GAC3BS,EAAKP,QAAUO,EAAKP,SAAW,GAExBO,IAsBPK,cAnBoB,IAA2CnB,EAAA,OAAAC,OAAA,qBAC/D,MAAMmB,QAAiBjB,OAAAK,EAAA,EAAAL,CAA8B,MAAO,aAG5D,OAFAiB,EAASC,aAAelB,OAAAU,EAAA,OAAAV,CAAOiB,EAASC,aAAc,CAAEC,GAAqCA,EAAEC,OAAOP,OAE/FI,IAgBPtB,aACA0B,WAnCwBf,GAAsCT,EAAA,OAAAC,OAAA,qBAC9D,aAAaE,OAAAK,EAAA,EAAAL,CAAsB,mBAAoBM,OAmCvDgB,gBApD6BX,GAAyCd,EAAA,OAAAC,OAAA,qBAItE,OAHAa,EAAKY,SAAWZ,EAAKY,cACf5B,EAAWgB,IAEV,KAmDIa,EAAU,CACrBC,UAnBgB,IAAoC5B,EAAA,OAAAC,OAAA,qBAEpD,aADkBE,OAAAK,EAAA,EAAAL,CAA+B,MAAO,UAC7C0B,OAkBXC,QAfqBD,GAAuC7B,EAAA,OAAAC,OAAA,qBAC3D,aAAaE,OAAAK,EAAA,EAAAL,CAAc,MAAO,QAAS,CAAC0B,8CC3D/C,IAAAE,EAAAC,EAAA,KAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAAE,EAAAE,GAAAE,EAAAN,EAAA,IAAAO,EAAAP,EAAAE,EAAAI,GAAAE,EAAAR,EAAA,GAAAS,EAAAT,EAAAE,EAAAM,GAsEeE,EAAA,EAAAvC,OAAAgC,EAAA,WAAAhC,CAhEqBwC,IAAW,CAC3CC,OAAQ,GAGRC,KAAM,CACFC,SAAU,GAGdC,QAAS,CACLC,QAAS,QAGbC,QAAS,CACLC,WAAY,SACZC,eAAgB,mBAkDT,CAjC6CC,IACxD,MAAMC,QAAEA,GAAYD,GACdE,OAAEA,EAAMC,MAAEA,EAAKC,QAAEA,EAAOC,OAAEA,GAAWL,EAAMM,UAAY,CACzDJ,OAAQ,KACRC,MAAO,KACPC,QAAS,KACTC,OAAQ,MAGZ,OACIhB,EAAAkB,EAAAC,cAACpB,EAAA,SAAQ,KACLC,EAAAkB,EAAAC,cAAC3B,EAAA0B,EAAM,CAACE,SAAS,WAAWC,MAAM,UAAUC,UAAWV,EAAQT,QAC3DH,EAAAkB,EAAAC,cAACvB,EAAAsB,EAAO,CAACI,UAAWV,EAAQJ,SACvBG,EAAME,QAAUA,EAEjBb,EAAAkB,EAAAC,cAACrB,EAAAoB,EAAU,CAACK,QAAQ,KAAKF,MAAM,UAAUG,QAAQ,GAC5Cb,EAAMG,OAASA,GAGnBd,EAAAkB,EAAAC,cAAA,OAAKG,UAAWV,EAAQR,OACb,MAAXW,GACGf,EAAAkB,EAAAC,cAAA,OAAKG,UAAWV,EAAQN,SACnBS,IAKF,MAAVC,GAAkBA,qJCnDnC,SAASS,EAAWC,OAAAC,SAACA,GAAQD,EAAEf,EAAAiB,EAAA,EAAAF,EAAA,cAG3B,OAAIf,EAAMkB,GAAGC,WAAWC,MAAM,SACnBC,EAAAd,EAAAC,cAAA,IAAAzD,OAAAC,OAAA,CAAGsE,QAAS,IAAMhF,MAAMiF,QAAQvB,EAAMkB,GAAGC,aAAiBnB,GAAQA,EAAMM,UAG5Ee,EAAAd,EAAAC,cAACgB,EAAA,EAAIzE,OAAAC,OAAA,GAAKgD,IAWN,IAAAyB,EARuCzB,GAE9CqB,EAAAd,EAAAC,cAACkB,EAAA,EAAQ3E,OAAAC,OAAA,GAAKgD,EAAK,CAAE2B,UAAWb,IAC3Bd,EAAMM,0ECjBnB,MAAMsB,EAA8BC,IAAU,CAC1CC,KAAM,CACFC,QAA8B,EAArBF,EAAMG,QAAQC,KACvBC,cAAe,GAGnBC,QAAS,CACLJ,QAA8B,EAArBF,EAAMG,QAAQC,KACvBG,WAAY,GAGhBC,OAAQ,GAGRC,SAAU,CACN5B,MAAOmB,EAAMU,QAAQC,QAAQC,MAGjCC,YAAa,GAIbC,YAAa,CACTC,YAAa,MAkFRC,EAA0CC,IACnD,MAAOC,EAAUC,GAAe3B,EAAAd,EAAM0C,UAAkB,GAExD,OACI5B,EAAAd,EAAAC,cAACa,EAAAd,EAAM2C,SAAQ,KACX7B,EAAAd,EAAAC,cAAC2C,EAAO,CAACC,KAAML,EAAUM,QAAS,KAAQL,GAAY,MACtD3B,EAAAd,EAAAC,cAAC8C,EAAU,CAACC,OAAO,EAAMjC,QAAS,KAAQ0B,GAAY,IAAUQ,KAAMnC,EAAAd,EAAAC,cAACiD,EAAAlD,EAAQ,UAKrF4C,EAAUpG,OAAA2G,EAAA,EAAA3G,CAAWA,OAAA4G,EAAA,WAAA5G,CAAW6E,EAAX7E,CAnF0BiD,IACjD,MAAMC,QAACA,GAAWD,EAEZ4D,EAAW,CACb,CACIC,KAAM,QACN3C,GAAI,IACJY,KAAM/E,OAAA+G,EAAA,EAAA/G,CAAU,eAEpB,CACImE,GAAI,gBACJY,KAAM/E,OAAA+G,EAAA,EAAA/G,CAAU,sBAEpB,CACImE,GAAI,aACJY,KAAM/E,OAAA+G,EAAA,EAAA/G,CAAU,mBAEpB,CACImE,GAAI,YACJY,KAAM/E,OAAA+G,EAAA,EAAA/G,CAAU,kBAKpB,CACImE,GAAI,iCACJY,KAAM/E,OAAA+G,EAAA,EAAA/G,CAAU,eAIxB,OACIsE,EAAAd,EAAAC,cAACuD,EAAAxD,EAAM,CAAC6C,KAAMpD,EAAMoD,KAAMC,QAASrD,EAAMqD,SACrChC,EAAAd,EAAAC,cAACkB,EAAA,EAAU,CAACf,UAAWV,EAAQ6B,KAAMlB,QAAQ,KAAKoD,cAAc,GAC3DjH,OAAA+G,EAAA,EAAA/G,CAAU,eAEfsE,EAAAd,EAAAC,cAACkB,EAAA,EAAU,CAACf,UAAWV,EAAQkC,QAASvB,QAAQ,QAAQF,MAAM,gBAAgBsD,cAAc,cAC/E,mBAAa,WAG1B3C,EAAAd,EAAAC,cAACkB,EAAA,EAAO,MACRL,EAAAd,EAAAC,cAACkB,EAAA,EAAI,KAEDkC,EAASK,IAAKC,GAAkB,YAAXA,EAAEL,KACjBxC,EAAAd,EAAAC,cAACkB,EAAA,EAAO,MACRL,EAAAd,EAAAC,cAACiB,EAAY,CAAC0C,IAAKD,EAAEhD,GAAIA,GAAIgD,EAAEhD,GAAIkD,SAAUpE,EAAMoB,MAAMiD,MAAQH,EAAEhD,GAAIhB,QAAQ,GAC7EmB,EAAAd,EAAAC,cAACkB,EAAA,EAAY,CACTc,QAAS0B,EAAEpC,KACX7B,QAAS,CAACuC,QAASxC,EAAMoB,MAAMiD,MAAQH,EAAEhD,GAAKjB,EAAQoC,OAASpC,EAAQqC,mBAqCtFgB,EAAavG,OAAA4G,EAAA,WAAA5G,CAAW6E,EAAX7E,CAtBwCiD,IAC9D,MAAMC,QAAEA,EAAOsD,MAAEA,EAAKC,KAAEA,GAAwBxD,EAAlBsE,EAAArD,EAAA,EAAAjB,EAAA,4BAE9B,OACIqB,EAAAd,EAAAC,cAACkB,EAAA,EAAU3E,OAAAC,OAAA,CAAC2D,UAAW4C,EAAQtD,EAAQ0C,YAAc1C,EAAQyC,YAAahC,MAAM,WAAc4D,GACzFd,uCC7Gb,IAAAe,EAAA3F,EAAA,IAAA4F,EAAA5F,EAAA,GAAA6F,EAAA7F,EAAAE,EAAA0F,GAkDelF,EAAA,EAAAvC,OAAAwH,EAAA,WAAAxH,CA/CqBwC,IAAW,CAC3CmF,KAAM,CACFC,wBAAyB,QACzB/E,QAAS,OACTgF,SAAU,SACVC,OAAQ,QACRC,MAAO,QACPC,gBAAiB,QAGrB7I,KAAM,CACF8I,KAAO,WACPC,OAAQ,EACRC,SAAU,OACVC,UAAW,YAiCJ,CAlBwCnF,IACnD,MAAMC,QAAEA,GAAYD,GACdoF,OAAEA,EAAMlJ,KAAEA,EAAIkG,WAAEA,EAAUF,cAAEA,GAAkBlC,EAAMM,SAEpD+E,EAAanD,GAAiB,OAEpC,OACIuC,EAAAlE,EAAAC,cAACiE,EAAAlE,EAAM2C,SAAQ,KACXuB,EAAAlE,EAAAC,cAAA,OAAKG,UAAWV,EAAQyE,MACnBU,EACDX,EAAAlE,EAAAC,cAAA,OAAKG,UAAWV,EAAQ/D,KAAMoJ,MAAO,CAAClD,aAAYF,cAAemD,IAC5DnJ,+FCjBNoD,EAAA,EAAAvC,OAAAgC,EAAA,WAAAhC,CAtBqB8E,IAAU,CAC1CC,KAAM,CAEFyD,YAAkC,EAArB1D,EAAMG,QAAQC,KAC3BuD,aAAmC,EAArB3D,EAAMG,QAAQC,QAkBrB,CAVmCjC,IAC9C,MAAMC,QAACA,EAAO6B,KAAEA,GAAuB9B,EAAjBsE,EAAA1H,EAAA,EAAAoD,EAAA,oBAEtB,OACIyF,EAAAlF,EAAAC,cAACkF,EAAAnF,EAAUxD,OAAAC,OAAA,CAAC2D,UAAWV,EAAQ6B,KAAMpB,MAAM,iBAAqB4D,GAC3DxC,6FCKExC,EAAA,EAAAvC,OAAAgC,EAAA,WAAAhC,CAtBqB8E,IAAU,CAC1C8D,SAAU,CACNC,UAAgC,EAArB/D,EAAMG,QAAQC,KACzBsD,YAAkC,EAArB1D,EAAMG,QAAQC,KAC3BuD,aAAmC,EAArB3D,EAAMG,QAAQC,QAkBrB,CAV6CjC,IACxD,MAAMC,QAAEA,EAAO6B,KAAEA,GAAwB9B,EAAlBsE,EAAA1H,EAAA,EAAAoD,EAAA,oBAEvB,OACIyF,EAAAlF,EAAAC,cAACkF,EAAAnF,EAAUxD,OAAAC,OAAA,CAAC2D,UAAWV,EAAQ0F,SAAU/E,QAAQ,KAAKF,MAAM,gBAAgBsD,cAAc,GAAUM,GAC/FxC,qGCXb,MAaa+D,EAAY,CACvBC,oBAd0B,IAA+BlJ,EAAA,OAAAC,OAAA,qBACzD,MAAMM,QAAgBJ,OAAAK,EAAA,EAAAL,CAAe,MAAO,YAEtCN,EAASM,OAAAU,EAAA,OAAAV,CAAOI,EAAS,QAAQ4I,OAAO,CAAC9B,EAAK+B,EAAKC,KACvDhC,EAAIgC,GAAOD,EACX/B,EAAI+B,EAAI3I,IAAM2I,EACP/B,GACN,IAGH,OAFAxH,EAAOS,OAASC,EAAQD,OAEjBT,qGCZT,MAaayJ,EAAU,CACrBC,kBAdwB,IAA+BvJ,EAAA,OAAAC,OAAA,qBACvD,MAAMI,QAAcF,OAAAK,EAAA,EAAAL,CAAe,MAAO,UAEpCN,EAASM,OAAAU,EAAA,OAAAV,CAAOE,EAAO,QAAQ8I,OAAO,CAAC9B,EAAK+B,EAAKC,KACrDhC,EAAIgC,GAAOD,EACX/B,EAAI+B,EAAI3I,IAAM2I,EACP/B,GACN,IAGH,OADAxH,EAAOS,OAASD,EAAMC,OACfT,6FCXT,MAQa2J,EAAc,CACzBC,cAToB,IAAsCzJ,EAAA,OAAAC,OAAA,qBAC1D,aAAaE,OAAAuJ,EAAA,EAAAvJ,CAAyB,MAAO,eAS7CwJ,eAN4BC,GAAgC5J,EAAA,OAAAC,OAAA,qBAC5D,aAAaE,OAAAuJ,EAAA,EAAAvJ,CAAa,MAAO,YAAayJ,gGCahD,MAAMC,EAAQ,IAAIC,IACZC,EAAe,aAQd,SAASC,EAAuChJ,EAAc5B,GACjE,MAAO,CAAC6K,GAAe,EAAOC,GAAgB,KAE1C,MAAMC,EAAMN,EAAMO,IAAIpJ,GACtB,IAAKqJ,EAAOC,GAAY,CAAC,KAAM,MAC3BL,KAGCI,EAAOC,GAAY7F,EAAAd,EAAM0C,SAAc8D,IAAQJ,EAAUI,EAAM,OAGpE,MAAOI,EAAQC,GAAa/F,EAAAd,EAAM0C,UAAS,GAI3C,SAASoE,IACL,GAAuB,MAAnBZ,EAAMO,IAAIpJ,GAIV,MAHA6I,EAAMa,IAAI1J,EAAM+I,GAnChC,SAA4BY,EAA6BC,6CACrD,IACIA,QAAqBD,KACvB,MAAOrD,GAELsD,EAAe,KAAQ,MAAMtD,OAiCfuD,CAAUzL,EAAS0L,IACJ,mBAANA,EACPjB,EAAMa,IAAI1J,EAAO8J,EAAUjB,EAAMO,IAAIpJ,KAErC6I,EAAMa,IAAI1J,EAAM8J,KAErBC,MAAOzD,IAMFkD,IALCN,GAGS,MAAQ,MAAM5C,OAoBxC,OArCAmD,IAyBAtK,OAAA6K,EAAA,UAAA7K,CAAU,IAEC,KAAQ0J,EAAMoB,OAAOjK,IAC7B,IASI,CACHkK,CAAClK,GAAOiJ,EAAeI,EAAQF,EAC/Be,OAAOlK,EAAKmK,OAAO,GAAGC,cAAgBpK,EAAKqK,MAAM,MAAOpB,EAAeK,EAR3E,aASIY,QAAQlK,EAAKmK,OAAO,GAAGC,cAAgBpK,EAAKqK,MAAM,MAAOZ,EACzDS,QAAQlK,EAAKmK,OAAO,GAAGC,cAAgBpK,EAAKqK,MAAM,YAAad,iBCvF3EvI,EAAAsJ,EAAA5I,EAAA,sBAAA6I,IAAAvJ,EAAAsJ,EAAA5I,EAAA,sBAAA8I,IAAAxJ,EAAAsJ,EAAA5I,EAAA,sBAAA+I,IAAAzJ,EAAAsJ,EAAA5I,EAAA,sBAAAgJ,IAAA1J,EAAAsJ,EAAA5I,EAAA,sBAAAiJ,IAAA3J,EAAAsJ,EAAA5I,EAAA,sBAAAkJ,IA0CO,MAAML,EAAWvB,EAA+B,QAAS6B,EAAA,EAAQlL,YAC3D6K,EAAaxB,EAAiC,UAAWzJ,EAAA,EAAU2I,qBACnEuC,EAAWzB,EAA+B,QAAS3J,EAAA,EAAQkJ,mBAC3DmC,EAAyB1B,EAA6C,sBAAuB6B,EAAA,EAAQ1K,eACrGwK,EAAc3B,EAAkC,WAAYJ,EAAA,EAAYH,eACxEmC,EAAU5B,EAA8B,OAAQ6B,EAAA,EAAQjK,8CChDrEI,EAAA8I,EAAApI,GAAA,IAAAiF,EAAA3F,EAAA,IAAA8J,EAAA9J,EAAA,IAAA+J,EAAA/J,EAAA,GAAAgK,EAAAhK,EAAAE,EAAA6J,GAAAE,EAAAjK,EAAA,MAAAkK,EAAAlK,EAAA,KAAAmK,EAAAnK,EAAA,KAAAoK,EAAApK,EAAA,KAAAqK,EAAArK,EAAA,KAAAsK,EAAAtK,EAAA,KAAAuK,EAAAvK,EAAA,IAAAwK,EAAAxK,EAAA,KAYA,MAAMyK,EAAQT,EAAArI,EAAM+I,KAAK,IAAMnN,QAAAoN,IAAA,CAAA3K,EAAAsF,EAAA,GAAAtF,EAAAsF,EAAA,KAAAsF,KAAA5K,EAAA6K,KAAA,aAuChBnK,EAAA,QAAAvC,OAAA2L,EAAA,cAAa3L,OAAA8L,EAAA,EAAA9L,CAAWA,OAAAwH,EAAA,WAAAxH,CArCH8E,IAAU,CAC1C6H,KAAM,CACF9D,UAAW,EACX+D,aAAmC,EAArB9H,EAAMG,QAAQC,QAkCGlF,CA5BgB+F,IACnD,MAAM8G,MAAEA,GAAU7M,OAAA+L,EAAA,EAAA/L,GAElB,OACI6L,EAAArI,EAAAC,cAAC4I,EAAA,EAAI,KACA,CACGhE,OAASwD,EAAArI,EAAAC,cAACuI,EAAA,EAAS,CAAC5I,MAAOpD,OAAAoM,EAAA,EAAApM,CAAU,kBAAmBmD,OAAQ0I,EAAArI,EAAAC,cAACyI,EAAA,EAAa,QAC9E7G,WAAY,GACZF,cAAe,GAEfhG,KACI0M,EAAArI,EAAAC,cAACoI,EAAArI,EAAM2C,SAAQ,KACO,IAAjB0G,EAAM1M,OACD0L,EAAArI,EAAAC,cAACwI,EAAA,EAAQ,CAAC1D,MAAO,CAAElD,WAAY,IAAMN,KAAM/E,OAAAoM,EAAA,EAAApM,CAAU,uBACrD6M,EAAM3F,IAAKvG,GACTkL,EAAArI,EAAAC,cAACoI,EAAArI,EAAM2C,SAAQ,KACX0F,EAAArI,EAAAC,cAAC0I,EAAA,EAAS,CAACpH,KAAMpE,EAAKE,OACtBgL,EAAArI,EAAAC,cAAC6I,EAAK,CAAC3L,KAAMA","file":"14.js","sourcesContent":["export default async function callAPI<T>(method: string, path: string, body: any = null): Promise<T> {\n    if (__PRODUCTION__) {\n        return await new Promise<T>((resolve, reject) => {\n            Homey.api(method, path, body, (err: any, result: any) =>  {\n                if (err) { reject(err); } else { resolve(result); }\n            });\n        });\n    }\n\n    const options: any = {\n        method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        cache: \"no-store\",\n    };\n\n    if (body != null) {\n        options.body = JSON.stringify(body);\n    }\n\n    // local development\n    const res = await fetch(`${__HOMEY_DEV_URL}/api/app/app.mskg.homey-heating${path}`, options);\n    return await res.json() as T;\n}\n","\nimport { map, sortBy } from \"lodash\";\nimport { IGroupedCalculatedTemperature, IHeatingPlan, IScheduleInformation, OperationMode } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nconst fetchPlans = async (): Promise<IHeatingPlan[]> => {\n  const res = await callAPI<IHeatingPlan[]>(\"GET\", \"/plans\");\n\n  return sortBy(map(res, (plan: IHeatingPlan) => {\n    plan.zones = plan.zones || [];\n    plan.devices = plan.devices || [];\n\n    return plan;\n  }), (p) => p.name);\n};\n\nconst togglePlanState = async (plan: IHeatingPlan): Promise<boolean> => {\n  plan.enabled = !plan.enabled;\n  await updatePlan(plan);\n\n  return true;\n};\n\nconst updatePlan = async (newPlan: IHeatingPlan): Promise<IHeatingPlan> => {\n  const planCopy = {...newPlan};\n\n  if (!planCopy.zones || planCopy.zones.length === 0) { planCopy.zones = undefined; }\n  if (!planCopy.devices || planCopy.devices.length === 0) { planCopy.devices = undefined; }\n\n  return await callAPI<IHeatingPlan>(\"PUT\", `/plans/${newPlan.id}`, planCopy);\n};\n\nconst removePlan = async (id: string): Promise<IHeatingPlan> => {\n  return await callAPI<IHeatingPlan>(\"DELETE\", `/plans/${id}`);\n};\n\nconst fetchPlanById = async (id: string): Promise<IHeatingPlan> => {\n  const plan = await callAPI<IHeatingPlan>(\"GET\", `/plans/${id}`);\n  if (plan == null) { throw new Error(`Plan ${id} not found.`); }\n\n  plan.zones = plan.zones || [];\n  plan.devices = plan.devices || [];\n\n  return plan;\n};\n\nconst fetchSchedule = async (): Promise<IScheduleInformation> => {\n  const schedule = await callAPI<IScheduleInformation>(\"GET\", `/schedule`);\n  schedule.temperatures = sortBy(schedule.temperatures, [(s: IGroupedCalculatedTemperature) => s.device.name]);\n\n  return schedule;\n};\n\nconst fetchMode = async (): Promise<OperationMode> => {\n  const res = await callAPI<{mode: OperationMode}>(\"GET\", \"/mode\");\n  return res.mode;\n};\n\nconst setMode = async (mode: OperationMode): Promise<void> => {\n   return await callAPI<void>(\"PUT\", `/mode`, {mode});\n};\n\nexport const planAPI = {\n  fetchPlans,\n  fetchPlanById,\n  fetchSchedule,\n  updatePlan,\n  removePlan,\n  togglePlanState,\n};\n\nexport const modeAPI = {\n  fetchMode,\n  setMode,\n};\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Fragment, ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    appBar: {\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n\n    buttons: {\n        display: \"flex\" as \"flex\",\n    },\n\n    toolbar: {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n});\n\ntype NamedSlots = {\n    title?: string,\n    button?: ReactChild,\n    actions?: ReactChild,\n    subBar?: ReactChild,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    title?: string,\n    button?: React.ReactElement<any>,\n    children?: NamedSlots,\n};\n\nconst AppHeaderComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { button, title, actions, subBar } = props.children || {\n        button: null,\n        title: null,\n        actions: null,\n        subBar: null,\n    };\n\n    return (\n        <Fragment>\n            <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {props.button || button}\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                        {props.title || title}\n                    </Typography>\n\n                     <div className={classes.grow} />\n                    {actions != null &&\n                        <div className={classes.buttons}>\n                            {actions}\n                        </div>\n                    }\n                </Toolbar>\n\n                {subBar != null && subBar}\n            </AppBar>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(AppHeaderComponent);\n","import { ListItem } from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { LocationDescriptor } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props =  {\n    // ListItemProps and LinkProps both define an 'innerRef' property which are incompatible.\n\n    to: LocationDescriptor\n    replace?: boolean,\n} & ListItemProps;\n\nfunction createLink({innerRef, ...props}: Props) {\n    // Remove `innerRef` from properties as the interface is incompatible.\n\n    if (props.to.toString().match(/https/)) {\n        return <a onClick={() => Homey.openURL(props.to.toString())} {...props}>{props.children}</a>;\n    }\n\n    return <Link {...props} />;\n}\n\nconst ListItemLink: React.FunctionComponent<Props> = (props) => {\n    return (\n        <ListItem {...props} component={createLink as unknown as \"a\"}>\n            {props.children}\n        </ListItem>\n    );\n};\n\nexport default ListItemLink;\n","import { Divider, IconButton, List, ListItemText, StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport translate from \"../i18n/Translation\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        padding: theme.spacing.unit * 2,\n        paddingBottom: 0,\n    },\n\n    version: {\n        padding: theme.spacing.unit * 2,\n        paddingTop: 0,\n    },\n\n    normal: {\n    },\n\n    selected: {\n        color: theme.palette.primary.main,\n    },\n\n    otherButton: {\n\n    },\n\n    firstButton: {\n        marginLeft: -12,\n        // marginRight: 20,\n    },\n});\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n} & WithStyles<typeof styles> & RouteComponentProps;\n\nconst AppMenuBase: React.FunctionComponent<Props> = (props) => {\n    const {classes} = props;\n\n    const elements = [\n        {\n            type: \"entry\",\n            to: \"/\",\n            text: translate(\"menu.plans\"),\n        },\n        {\n            to: \"/temperatures\",\n            text: translate(\"menu.temperatures\"),\n        },\n        {\n            to: \"/schedules\",\n            text: translate(\"menu.schedules\"),\n        },\n        {\n            to: \"/settings\",\n            text: translate(\"menu.settings\"),\n        },\n        // {\n        //     type: \"Divider\"\n        // },\n        {\n            to: \"https://homey-heating.mskg.app\",\n            text: translate(\"menu.help\"),\n        },\n    ];\n\n    return (\n        <Drawer open={props.open} onClose={props.onClose}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom={true}>\n                {translate(\"menu.title\")}\n            </Typography>\n            <Typography className={classes.version} variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\n                Version {__VERSION} ({__BUILD})\n            </Typography>\n\n            <Divider />\n            <List>\n            {\n                elements.map((e) => (e.type === \"Divider\"\n                    ? <Divider />\n                    : <ListItemLink key={e.to} to={e.to} disabled={props.match.url === e.to} button={true}>\n                        <ListItemText\n                            primary={e.text}\n                            classes={{primary: props.match.url !== e.to ? classes.normal : classes.selected}}\n                        />\n                    </ListItemLink>\n                ))\n            }\n            </List>\n        </Drawer>\n    );\n};\n\ntype MenuButtonProps = {\n    icon: React.ReactElement<any>,\n    first?: boolean,\n} & WithStyles<typeof styles> & IconButtonProps;\n\nconst MenuButtonBase: React.FunctionComponent<MenuButtonProps> = (props) => {\n    const { classes, first, icon, ...otherProps } = props;\n\n    return (\n        <IconButton className={first ? classes.firstButton : classes.otherButton} color=\"inherit\" {...otherProps}>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport const AppMenuButton: React.FunctionComponent = (_props) => {\n    const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <AppMenu open={openMenu} onClose={() => { setOpenMenu(false); }} />\n            <MenuButton first={true} onClick={() => { setOpenMenu(true); }} icon={<MenuIcon />} />\n        </React.Fragment>\n    );\n};\n\nconst AppMenu = withRouter(withStyles(styles)(AppMenuBase));\nexport const MenuButton = withStyles(styles)(MenuButtonBase);\n\nexport default AppMenu;\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React, { ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        webkitOverflowScrolling: \"touch\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: \"#fff\",\n    },\n\n    body: {\n        flex : \"1 0 100%\",\n        margin: 0,\n        maxWidth: \"100%\",\n        overflowY: \"scroll\",\n    },\n});\n\ntype NamedSlots = {\n    header: ReactChild,\n    body: ReactChild,\n    paddingTop: number | string,\n    paddingBottom?: number | string,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    children: NamedSlots,\n};\n\nconst PageComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { header, body, paddingTop, paddingBottom } = props.children;\n\n    const newPadding = paddingBottom || \"auto\";\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {header}\n                <div className={classes.body} style={{paddingTop, paddingBottom: newPadding}}>\n                    {body}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(PageComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        // marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = {\n    text: string,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst BodyText: React.FunctionComponent<Props> = (props) => {\n    const {classes, text, ...otherProps} = props;\n\n    return (\n        <Typography className={classes.text} color=\"textSecondary\"  {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(BodyText);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    headline: {\n        marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype SubHeaderProps = {\n    text: string | undefined,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst SubHeader: React.FunctionComponent<SubHeaderProps> = (props) => {\n    const { classes, text, ...otherProps } = props;\n\n    return (\n        <Typography className={classes.headline} variant=\"h5\" color=\"textSecondary\" gutterBottom={true} {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(SubHeader);\n","\nimport { sortBy } from \"lodash\";\nimport { IHeatingDevice } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingDevice;\n} & ArrayLike<IHeatingDevice>;\n\n// Homey.api( String method, String path, Mixed body, Function callback )\nconst fetchHeatingDevices = async (): Promise<HashType> => {\n  const devices = await callAPI<any[]>(\"GET\", \"/devices\");\n\n  const result = sortBy(devices, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n  result.length = devices.length;\n\n  return result;\n};\n\nexport const deviceAPI = {\n  fetchHeatingDevices,\n};\n","import { sortBy } from \"lodash\";\nimport { IHeatingZone } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingZone;\n} & ArrayLike<IHeatingZone>;\n\nconst fetchHeatingZones = async (): Promise<HashType> => {\n  const zones = await callAPI<any[]>(\"GET\", \"/zones\");\n\n  const result = sortBy(zones, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n\n  result.length = zones.length;\n  return result;\n};\n\nexport const zoneAPI = {\n  fetchHeatingZones,\n};\n","import { Settings } from \"../../../app/services/settings-manager/types\";\nimport callAPI from \"../callAPI\";\n\nexport type SettingsHashMap = {\n  [key in keyof typeof Settings]?: string | boolean;\n};\n\nconst fetchSettings = async (): Promise<SettingsHashMap> => {\n  return await callAPI<SettingsHashMap>(\"GET\", \"/settings\");\n};\n\nconst updateSettings = async (settings: {}): Promise<void> => {\n  return await callAPI<any>(\"PUT\", `/settings`, settings);\n};\n\nexport const settingsAPI = {\n  fetchSettings,\n  updateSettings,\n};\n","import React, { Dispatch, SetStateAction, useEffect } from \"react\";\n\nexport type MapType = {[key: string]: any};\n\nexport type HookSetType<T> = Dispatch<SetStateAction<T>>;\nexport type HookReturnType = () => void;\nexport type ProvideState<T extends MapType> = (provideState?: boolean, provideFailed?: boolean) => T;\n\ntype Async<T> = () => Promise<T>;\n\n/***\n * Call the apiMethod asynchronously.\n *\n * If the method fails, throw the exception inside set SetStateAction of the hook.\n * This allows to catch the error \"in the ErrorBoundary.\"\n */\nasync function tryMethod<T>(apiMethod: () => Promise<T>, setStateAction: Dispatch<SetStateAction<T>>): Promise<void> {\n    try {\n        setStateAction(await apiMethod());\n    } catch (e) {\n        // required for the error to popup the hierarchy\n        setStateAction(() => { throw e; });\n    }\n}\n\nconst cache = new Map<string, any>();\nconst LOADING: any = \"Loading...\";\n\n/**\n * Create a \"hook\" that is able to suspend.\n *\n * @param name Must be unique\n * @param method The async method to wait for\n */\nexport function useSuspendableState<T extends MapType>(name: string, method: Async<any>): ProvideState<T> {\n    return (provideState = false, provideFailed = false) => {\n        // this is imporant as it sets the state after the promise resolves\n        const val = cache.get(name);\n        let [state, setState] = [null, null];\n        if (provideState) {\n            // we use instance compare on LOADING to determine non existing value\n            // @ts-ignore\n            [state, setState] = React.useState<any>(val !== LOADING ? val : null);\n        }\n\n        const [failed, setFailed] = React.useState(false);\n\n        loadValue();\n\n        function loadValue() {\n            if (cache.get(name) == null) {\n                cache.set(name, LOADING);\n\n                // this unloads the component and waits for the promise to resolve\n                throw tryMethod(method, (r) => {\n                    if (typeof r === \"function\") {\n                        cache.set(name, (r as any)(cache.get(name)));\n                    } else {\n                        cache.set(name, r);\n                    }\n                }).catch((e) => {\n                    if (!provideFailed) {\n                        // console.error(e);\n                        // check me - this doesn't work\n                        setFailed(() => { throw e; });\n                    } else {\n                        setFailed(true);\n                    }\n                });\n            }\n        }\n\n        useEffect(() => {\n            // console.log(\"killed value\");\n            return () => { cache.delete(name); };\n        }, []);\n\n        // we tell the DEV that this is not the way to go\n        function failOnNoState() {\n            if (!__PRODUCTION__) {\n                throw new Error(`You must use hooks to save the value ${name}`);\n            }\n        }\n\n        return {\n            [name]: provideState ? state : val,\n            [`set${name.charAt(0).toUpperCase() + name.slice(1)}`]: provideState ? setState : failOnNoState,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}`]: loadValue,\n            [`load${name.charAt(0).toUpperCase() + name.slice(1)}Failed`]: failed,\n        } as T;\n    };\n}\n","import { IHeatingDevice, IHeatingPlan, IHeatingZone, IScheduleInformation, OperationMode } from \"../../app/model\";\nimport { deviceAPI } from \"./devices\";\nimport { modeAPI, planAPI } from \"./heating\";\nimport { settingsAPI, SettingsHashMap } from \"./settings\";\nimport { HookReturnType, HookSetType, useSuspendableState } from \"./suspendableState\";\nimport { zoneAPI } from \"./zones\";\n\ntype PlansType = {\n    plans: IHeatingPlan[],\n    setPlans: HookSetType<IHeatingPlan[]>,\n    loadPlans: HookReturnType,\n};\n\ntype DevicesType = {\n    devices: IHeatingDevice[],\n    setDevices: HookSetType<IHeatingDevice[]>,\n    loadDevices: HookReturnType,\n};\n\ntype ZonesType = {\n    zones: IHeatingZone[],\n    setZones: HookSetType<IHeatingZone[]>,\n    loadZones: HookReturnType,\n};\n\ntype ScheduleInformationType = {\n    scheduleInformation: IScheduleInformation,\n    setScheduleInformation: HookSetType<IScheduleInformation>,\n    loadScheduleInformation: HookReturnType,\n};\n\ntype SettingsType = {\n    settings: SettingsHashMap,\n    setSettings: HookSetType<SettingsHashMap>,\n    loadSettings: HookReturnType,\n};\n\ntype ModeType = {\n    mode: OperationMode,\n    setMode: HookSetType<OperationMode>,\n    loadMode: HookReturnType,\n};\n\nexport const usePlans = useSuspendableState<PlansType>(\"plans\", planAPI.fetchPlans);\nexport const useDevices = useSuspendableState<DevicesType>(\"devices\", deviceAPI.fetchHeatingDevices);\nexport const useZones = useSuspendableState<ZonesType>(\"zones\", zoneAPI.fetchHeatingZones);\nexport const useScheduleInformation = useSuspendableState<ScheduleInformationType>(\"scheduleInformation\", planAPI.fetchSchedule);\nexport const useSettings = useSuspendableState<SettingsType>(\"settings\", settingsAPI.fetchSettings);\nexport const useMode = useSuspendableState<ModeType>(\"mode\", modeAPI.fetchMode);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport { InjectedNotistackProps, withSnackbar } from \"notistack\";\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { withRouter } from \"react-router-dom\";\nimport { usePlans } from \"../api/hooks\";\nimport AppHeader from \"../components/AppHeader\";\nimport BodyText from \"../components/BodyText\";\nimport { AppMenuButton } from \"../components/Menu\";\nimport SubHeader from \"../components/SubHeader\";\nimport translate from \"../i18n/Translation\";\nimport Page from \"../layouts/Page\";\nconst Chart = React.lazy(() => import(\"../components/TemperatureChart\"));\n\nconst styles: StyleRulesCallback = (theme) => ({\n    list: {\n        marginTop: 0,\n        marginBottom: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = WithStyles<typeof styles> & RouteComponentProps & InjectedNotistackProps;\n\nconst SchedulesPage: React.FunctionComponent<Props> = (_props) => {\n    const { plans } = usePlans();\n\n    return (\n        <Page>\n            {{\n                header: (<AppHeader title={translate(\"menu.schedules\")} button={<AppMenuButton />} />),\n                paddingTop: 50,\n                paddingBottom: 50,\n\n                body: (\n                    <React.Fragment>\n                        {plans.length === 0\n                            ? <BodyText style={{ paddingTop: 16 }} text={translate(\"plans.plans.empty\")} />\n                            : plans.map((plan) => (\n                                <React.Fragment>\n                                    <SubHeader text={plan.name} />\n                                    <Chart plan={plan} />\n                                </React.Fragment>\n                            ))\n                        }\n                    </React.Fragment>\n                ),\n            }}\n        </Page>\n    );\n};\n\nexport default withSnackbar(withRouter(withStyles(styles)(SchedulesPage)));\n"],"sourceRoot":""}