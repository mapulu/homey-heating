{"version":3,"sources":["webpack:///./api/callAPI.tsx","webpack:///./api/heating/index.tsx","webpack:///./components/AppHeader.tsx","webpack:///./components/InputContainer.tsx","webpack:///./components/ListItemLink.tsx","webpack:///./components/Menu.tsx","webpack:///./layouts/Page.tsx","webpack:///./components/BodyText.tsx","webpack:///./components/SubHeader.tsx","webpack:///./components/FormTextField.tsx","webpack:///./api/devices/index.tsx","webpack:///./api/zones/index.tsx","webpack:///./components/Transition.tsx","webpack:///./state/planHooks.tsx","webpack:///./components/ConfirmDialog.tsx","webpack:///./components/Icons.tsx","webpack:///./state/deviceHooks.tsx","webpack:///./state/zoneHooks.tsx","webpack:///./pages/plan.tsx"],"names":["callAPI","method","path","body","Promise","resolve","reject","Homey","api","err","result","updatePlan","newPlan","tslib__WEBPACK_IMPORTED_MODULE_0__","undefined","planCopy","Object","assign","zones","length","devices","_callAPI__WEBPACK_IMPORTED_MODULE_2__","id","planAPI","fetchPlans","res","lodash__WEBPACK_IMPORTED_MODULE_1__","plan","p","name","fetchPlanById","Error","fetchSchedule","schedule","temperatures","s","device","removePlan","togglePlanState","enabled","modeAPI","fetchMode","mode","setMode","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","__webpack_exports__","_theme","appBar","grow","flexGrow","buttons","display","toolbar","alignItems","justifyContent","props","classes","button","title","actions","subBar","children","a","createElement","position","color","className","variant","noWrap","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","theme","inputContainer","width","paddingLeft","spacing","unit","paddingRight","createLink","_a","innerRef","tslib_es6","to","toString","match","react_default","onClick","openURL","Link","components_ListItemLink","index_es","component","Menu_styles","text","padding","paddingBottom","version","paddingTop","normal","selected","palette","primary","main","otherButton","firstButton","marginLeft","AppMenuButton","_props","openMenu","setOpenMenu","useState","Fragment","AppMenu","open","onClose","MenuButton","first","icon","Menu_default","withRouter","styles","elements","type","Translation","Drawer_default","gutterBottom","map","e","key","disabled","url","otherProps","root","webkitOverflowScrolling","flexFlow","height","backgroundColor","flex","margin","maxWidth","overflowY","header","newPadding","style","react__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2___default","headline","marginTop","react__WEBPACK_IMPORTED_MODULE_2___default","_InputContainer__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1___default","fullWidth","deviceAPI","fetchHeatingDevices","reduce","obj","idx","zoneAPI","fetchHeatingZones","d","Transition","_material_ui_core__WEBPACK_IMPORTED_MODULE_0__","useHistory","useModifyPlan","useModifyExceptions","useModifySetPoints","usePlan","react__WEBPACK_IMPORTED_MODULE_0__","uuid_v1__WEBPACK_IMPORTED_MODULE_1__","_api_heating__WEBPACK_IMPORTED_MODULE_2__","_PlanProvider__WEBPACK_IMPORTED_MODULE_3__","dispatch","loaded","savePoint","undo","commit","setName","evt","target","value","setDescription","description","toggleState","toggleZone","zone","toggleDevice","isDirty","setDirty","setOverride","temp","temperature","clearOverride","updateOverride","selectDay","day","selectedDay","setPoint","copyDays","source","days","targets","removeSetPoint","index","loadSetPoint","point","newSetPoint","saveSetPoint","setStart","date","start","setTargetTemperature","parseFloat","cachedPlan","keep","then","overrides","ConfirmDialog","content","onOK","onCancel","others","Dialog_default","TransitionComponent","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","ZoneIcon","icons_index_es","loadingDevices","loadingZones","CloneDialog","lazy","bind","Chart","all","TabContainer","activeTab","Suspense","fallback","build","divider","marginBottom","avatar","selectedTab","selectTab","planHooks","params","location","state","PlanProvider","api_zones","z","react","useZones","api_devices","useDevices","setIsCloneDialogOpen","isCloneDialogOpen","dialog","confirmRemoveDialog","openConfirmRemove","isOpen","isConfirmRemoveOpen","onConfirm","setIsOpen","useConfirmDialog","heating","_p","history","push","pathname","enqueueSnackbar","v1","catch","r","Page","AppHeader","Menu","Cancel_default","ArrowBackIos_default","FileCopy_default","Delete_default","onChange","_e","v","scrollButtons","tab","disableRipple","label","isolation","SubHeader","BodyText","FormTextField","placeholder","FormControlLabel_default","control","Switch_default","checked","labelPlacement","multiline","flexDirection","textDecoration","replace","List_default","lodash","ListItem_default","ListItemAvatar_default","ListItemText_default","ListItemSecondaryAction_default","Checkbox_default","find","c","Avatar_default","src"],"mappings":"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","file":"13.js","sourcesContent":["export default async function callAPI<T>(method: string, path: string, body: any = null): Promise<T> {\n    if (__PRODUCTION__) {\n        return await new Promise<T>((resolve, reject) => {\n            Homey.api(method, path, body, (err: any, result: any) =>  {\n                if (err) { reject(err); } else { resolve(result); }\n            });\n        });\n    }\n\n    const options: any = {\n        method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        cache: \"no-store\",\n    };\n\n    if (body != null) {\n        options.body = JSON.stringify(body);\n    }\n\n    // local development\n    const res = await fetch(`${__HOMEY_DEV_URL}/api/app/app.mskg.homey-heating${path}`, options);\n    return await res.json() as T;\n}\n","\nimport { map, sortBy } from \"lodash\";\nimport { IGroupedCalculatedTemperature, IHeatingPlan, IScheduleInformation, OperationMode } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nconst fetchPlans = async (): Promise<IHeatingPlan[]> => {\n  const res = await callAPI<IHeatingPlan[]>(\"GET\", \"/plans\");\n\n  return sortBy(map(res, (plan: IHeatingPlan) => {\n    plan.zones = plan.zones || [];\n    plan.devices = plan.devices || [];\n\n    return plan;\n  }), (p) => p.name);\n};\n\nconst togglePlanState = async (plan: IHeatingPlan): Promise<boolean> => {\n  plan.enabled = !plan.enabled;\n  await updatePlan(plan);\n\n  return true;\n};\n\nconst updatePlan = async (newPlan: IHeatingPlan): Promise<IHeatingPlan> => {\n  const planCopy = {...newPlan};\n\n  if (!planCopy.zones || planCopy.zones.length === 0) { planCopy.zones = undefined; }\n  if (!planCopy.devices || planCopy.devices.length === 0) { planCopy.devices = undefined; }\n\n  return await callAPI<IHeatingPlan>(\"PUT\", `/plans/${newPlan.id}`, planCopy);\n};\n\nconst removePlan = async (id: string): Promise<IHeatingPlan> => {\n  return await callAPI<IHeatingPlan>(\"DELETE\", `/plans/${id}`);\n};\n\nconst fetchPlanById = async (id: string): Promise<IHeatingPlan> => {\n  const plan = await callAPI<IHeatingPlan>(\"GET\", `/plans/${id}`);\n  if (plan == null) { throw new Error(`Plan ${id} not found.`); }\n\n  plan.zones = plan.zones || [];\n  plan.devices = plan.devices || [];\n\n  return plan;\n};\n\nconst fetchSchedule = async (): Promise<IScheduleInformation> => {\n  const schedule = await callAPI<IScheduleInformation>(\"GET\", `/schedule`);\n  schedule.temperatures = sortBy(schedule.temperatures, [(s: IGroupedCalculatedTemperature) => s.device.name]);\n\n  return schedule;\n};\n\nconst fetchMode = async (): Promise<OperationMode> => {\n  const res = await callAPI<{mode: OperationMode}>(\"GET\", \"/mode\");\n  return res.mode;\n};\n\nconst setMode = async (mode: OperationMode): Promise<void> => {\n   return await callAPI<void>(\"PUT\", `/mode`, {mode});\n};\n\nexport const planAPI = {\n  fetchPlans,\n  fetchPlanById,\n  fetchSchedule,\n  updatePlan,\n  removePlan,\n  togglePlanState,\n};\n\nexport const modeAPI = {\n  fetchMode,\n  setMode,\n};\n","import AppBar from \"@material-ui/core/AppBar\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { Fragment, ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    appBar: {\n    },\n\n    grow: {\n        flexGrow: 1,\n    },\n\n    buttons: {\n        display: \"flex\" as \"flex\",\n    },\n\n    toolbar: {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n});\n\ntype NamedSlots = {\n    title?: string,\n    button?: ReactChild,\n    actions?: ReactChild,\n    subBar?: ReactChild,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    title?: string,\n    button?: React.ReactElement<any>,\n    children?: NamedSlots,\n};\n\nconst AppHeaderComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { button, title, actions, subBar } = props.children || {\n        button: null,\n        title: null,\n        actions: null,\n        subBar: null,\n    };\n\n    return (\n        <Fragment>\n            <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    {props.button || button}\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                        {props.title || title}\n                    </Typography>\n\n                     <div className={classes.grow} />\n                    {actions != null &&\n                        <div className={classes.buttons}>\n                            {actions}\n                        </div>\n                    }\n                </Toolbar>\n\n                {subBar != null && subBar}\n            </AppBar>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(AppHeaderComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    inputContainer: {\n        width: \"100%\",\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 3,\n    },\n});\n\ntype Props = {\n    children: React.ReactElement<any>,\n} & WithStyles<typeof styles>;\n\nconst InputContainer: React.FunctionComponent<Props> = (props) => {\n    return (<div className={props.classes.inputContainer}>{props.children}</div>);\n};\n\nexport default withStyles(styles)(InputContainer);\n","import { ListItem } from \"@material-ui/core\";\nimport { ListItemProps } from \"@material-ui/core/ListItem\";\nimport { LocationDescriptor } from \"history\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype Props =  {\n    // ListItemProps and LinkProps both define an 'innerRef' property which are incompatible.\n\n    to: LocationDescriptor\n    replace?: boolean,\n} & ListItemProps;\n\nfunction createLink({innerRef, ...props}: Props) {\n    // Remove `innerRef` from properties as the interface is incompatible.\n\n    if (props.to.toString().match(/https/)) {\n        return <a onClick={() => Homey.openURL(props.to.toString())} {...props}>{props.children}</a>;\n    }\n\n    return <Link {...props} />;\n}\n\nconst ListItemLink: React.FunctionComponent<Props> = (props) => {\n    return (\n        <ListItem {...props} component={createLink as unknown as \"a\"}>\n            {props.children}\n        </ListItem>\n    );\n};\n\nexport default ListItemLink;\n","import { Divider, IconButton, List, ListItemText, StyleRulesCallback, Typography, WithStyles, withStyles } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport translate from \"../i18n/Translation\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        padding: theme.spacing.unit * 2,\n        paddingBottom: 0,\n    },\n\n    version: {\n        padding: theme.spacing.unit * 2,\n        paddingTop: 0,\n    },\n\n    normal: {\n    },\n\n    selected: {\n        color: theme.palette.primary.main,\n    },\n\n    otherButton: {\n\n    },\n\n    firstButton: {\n        marginLeft: -12,\n        // marginRight: 20,\n    },\n});\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n} & WithStyles<typeof styles> & RouteComponentProps;\n\nconst AppMenuBase: React.FunctionComponent<Props> = (props) => {\n    const {classes} = props;\n\n    const elements = [\n        {\n            type: \"entry\",\n            to: \"/\",\n            text: translate(\"menu.plans\"),\n        },\n        {\n            to: \"/temperatures\",\n            text: translate(\"menu.temperatures\"),\n        },\n        {\n            to: \"/schedules\",\n            text: translate(\"menu.schedules\"),\n        },\n        {\n            to: \"/settings\",\n            text: translate(\"menu.settings\"),\n        },\n        // {\n        //     type: \"Divider\"\n        // },\n        {\n            to: \"https://homey-heating.mskg.app\",\n            text: translate(\"menu.help\"),\n        },\n    ];\n\n    return (\n        <Drawer open={props.open} onClose={props.onClose}>\n            <Typography className={classes.text} variant=\"h5\" gutterBottom={true}>\n                {translate(\"menu.title\")}\n            </Typography>\n            <Typography className={classes.version} variant=\"body2\" color=\"textSecondary\" gutterBottom={true}>\n                Version {__VERSION} ({__BUILD})\n            </Typography>\n\n            <Divider />\n            <List>\n            {\n                elements.map((e) => (e.type === \"Divider\"\n                    ? <Divider />\n                    : <ListItemLink key={e.to} to={e.to} disabled={props.match.url === e.to} button={true}>\n                        <ListItemText\n                            primary={e.text}\n                            classes={{primary: props.match.url !== e.to ? classes.normal : classes.selected}}\n                        />\n                    </ListItemLink>\n                ))\n            }\n            </List>\n        </Drawer>\n    );\n};\n\ntype MenuButtonProps = {\n    icon: React.ReactElement<any>,\n    first?: boolean,\n} & WithStyles<typeof styles> & IconButtonProps;\n\nconst MenuButtonBase: React.FunctionComponent<MenuButtonProps> = (props) => {\n    const { classes, first, icon, ...otherProps } = props;\n\n    return (\n        <IconButton className={first ? classes.firstButton : classes.otherButton} color=\"inherit\" {...otherProps}>\n            {icon}\n        </IconButton>\n    );\n};\n\nexport const AppMenuButton: React.FunctionComponent = (_props) => {\n    const [openMenu, setOpenMenu] = React.useState<boolean>(false);\n\n    return (\n        <React.Fragment>\n            <AppMenu open={openMenu} onClose={() => { setOpenMenu(false); }} />\n            <MenuButton first={true} onClick={() => { setOpenMenu(true); }} icon={<MenuIcon />} />\n        </React.Fragment>\n    );\n};\n\nconst AppMenu = withRouter(withStyles(styles)(AppMenuBase));\nexport const MenuButton = withStyles(styles)(MenuButtonBase);\n\nexport default AppMenu;\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport React, { ReactChild } from \"react\";\n\nconst styles: StyleRulesCallback = (_theme) => ({\n    root: {\n        webkitOverflowScrolling: \"touch\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: \"#fff\",\n    },\n\n    body: {\n        flex : \"1 0 100%\",\n        margin: 0,\n        maxWidth: \"100%\",\n        overflowY: \"scroll\",\n    },\n});\n\ntype NamedSlots = {\n    header: ReactChild,\n    body: ReactChild,\n    paddingTop: number | string,\n    paddingBottom?: number | string,\n};\n\ntype Props = WithStyles<typeof styles> & {\n    children: NamedSlots,\n};\n\nconst PageComponent: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const { header, body, paddingTop, paddingBottom } = props.children;\n\n    const newPadding = paddingBottom || \"auto\";\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {header}\n                <div className={classes.body} style={{paddingTop, paddingBottom: newPadding}}>\n                    {body}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withStyles(styles)(PageComponent);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    text: {\n        // marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype Props = {\n    text: string,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst BodyText: React.FunctionComponent<Props> = (props) => {\n    const {classes, text, ...otherProps} = props;\n\n    return (\n        <Typography className={classes.text} color=\"textSecondary\"  {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(BodyText);\n","import { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst styles: StyleRulesCallback = (theme) => ({\n    headline: {\n        marginTop: theme.spacing.unit * 4,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n    },\n});\n\ntype SubHeaderProps = {\n    text: string | undefined,\n} & WithStyles<typeof styles> & TypographyProps;\n\nconst SubHeader: React.FunctionComponent<SubHeaderProps> = (props) => {\n    const { classes, text, ...otherProps } = props;\n\n    return (\n        <Typography className={classes.headline} variant=\"h5\" color=\"textSecondary\" gutterBottom={true} {...otherProps}>\n            {text}\n        </Typography>\n    );\n};\n\nexport default withStyles(styles)(SubHeader);\n","import TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport React from \"react\";\nimport InputContainer from \"./InputContainer\";\n\nconst FormTextField = ({ classes, ...otherProps }: TextFieldProps) => {\n    return (\n        <InputContainer>\n            <TextField\n                fullWidth={true}\n                margin=\"normal\"\n                {...otherProps}\n            />\n        </InputContainer>);\n};\n\nexport default FormTextField;\n","\nimport { sortBy } from \"lodash\";\nimport { IHeatingDevice } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingDevice;\n} & ArrayLike<IHeatingDevice>;\n\n// Homey.api( String method, String path, Mixed body, Function callback )\nconst fetchHeatingDevices = async (): Promise<HashType> => {\n  const devices = await callAPI<any[]>(\"GET\", \"/devices\");\n\n  const result = sortBy(devices, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n  result.length = devices.length;\n\n  return result;\n};\n\nexport const deviceAPI = {\n  fetchHeatingDevices,\n};\n","import { sortBy } from \"lodash\";\nimport { IHeatingZone } from \"../../../app/model\";\nimport callAPI from \"../callAPI\";\n\nexport type HashType = {\n  [key: string]: IHeatingZone;\n} & ArrayLike<IHeatingZone>;\n\nconst fetchHeatingZones = async (): Promise<HashType> => {\n  const zones = await callAPI<any[]>(\"GET\", \"/zones\");\n\n  const result = sortBy(zones, \"name\").reduce((map, obj, idx) => {\n    map[idx] = obj;\n    map[obj.id] = obj;\n    return map;\n  }, {});\n\n  result.length = zones.length;\n  return result;\n};\n\nexport const zoneAPI = {\n  fetchHeatingZones,\n};\n","import { Zoom } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function Transition(props: any) {\n    return <Zoom {...props} />;\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport * as uuidv1 from \"uuid/v1\";\nimport { OverrideMode } from \"../../app/model\";\nimport { planAPI } from \"../api/heating\";\nimport { usePlanDispatch, usePlanGlobalState } from \"./PlanProvider\";\n\nexport const useHistory = () => {\n    const dispatch = usePlanDispatch();\n    const loaded = usePlanGlobalState(\"loaded\");\n\n    const savePoint = useCallback(() => dispatch({ type: \"savePoint\" }), [dispatch]);\n    const undo = useCallback(() => dispatch({ type: \"undo\" }), [dispatch]);\n    const commit = useCallback(() => dispatch({ type: \"commit\" }), [dispatch]);\n\n    useEffect(() => {\n        savePoint();\n    }, [loaded]);\n\n    return {\n        savePoint, undo, commit,\n    };\n};\n\nexport const useModifyPlan = () => {\n    const dispatch = usePlanDispatch();\n\n    const setName = useCallback((evt) => dispatch({ type: \"setName\", name: evt.target.value }), [dispatch]);\n    const setDescription = useCallback((evt) => dispatch({ type: \"setDescription\", description: evt.target.value }), [dispatch]);\n\n    const toggleState = useCallback(() => dispatch({ type: \"toggleEnabled\" }), [dispatch]);\n    const toggleZone = useCallback((id) => dispatch({ type: \"toggleZone\", zone: id }), [dispatch]);\n    const toggleDevice = useCallback((id) => dispatch({ type: \"toggleDevice\", device: id }), [dispatch]);\n\n    return { setName, setDescription, toggleState, toggleZone, toggleDevice };\n};\n\nexport const useModifyExceptions = () => {\n    const dispatch = usePlanDispatch();\n    const [isDirty, setDirty] = useState<boolean>(false);\n\n    const setOverride = useCallback((mode, temp) => {\n        dispatch({ type: \"setOverride\", mode, temperature: temp });\n        setDirty(true);\n    }, [dispatch]);\n\n    const clearOverride = useCallback((mode) => {\n        dispatch({ type: \"clearOverride\", mode });\n        setDirty(true);\n    }, [dispatch]);\n\n    const updateOverride = useCallback((mode: OverrideMode, target: number) => {\n        if (target === 0) { clearOverride(mode); } else { setOverride(mode, target); }\n    }, [dispatch]);\n\n    useEffect(() => {\n        setDirty(false);\n    }, []);\n\n    return { isDirty, setOverride, clearOverride, updateOverride };\n};\n\nexport const useModifySetPoints = () => {\n    const [isDirty, setDirty] = useState<boolean>(false);\n\n    const dispatch = usePlanDispatch();\n\n    const selectDay = useCallback((day) => { dispatch({ type: \"selectDay\", day }); }, [dispatch]);\n    const selectedDay = usePlanGlobalState(\"selectedDay\");\n    const setPoint = usePlanGlobalState(\"setPoint\");\n\n    const copyDays = useCallback((source, days) => {\n        if (days != null && days.length > 0) {\n            setDirty(true);\n            dispatch({ type: \"copyDays\", source, targets: days });\n        }\n    }, [dispatch]);\n\n    const removeSetPoint = useCallback((idx) => { setDirty(true); dispatch({ type: \"removeSetPoint\", index: idx }); }, [dispatch]);\n\n    const loadSetPoint = useCallback((point) => { dispatch({ type: \"loadSetPoint\", setPoint: point }); }, [dispatch]);\n    const newSetPoint = useCallback((day) => { dispatch({ type: \"newSetPoint\", day }); }, [dispatch]);\n\n    const saveSetPoint = useCallback((s) => {\n        if (s.index === -1) {\n            dispatch({ type: \"addSetPoint\", setPoint: s });\n        } else {\n            dispatch({ type: \"updateSetPoint\", setPoint: s });\n        }\n    }, [dispatch]);\n\n    const setStart = useCallback((date: Date | string) => dispatch({ type: \"setStart\", start: date }), [dispatch]);\n    const setTargetTemperature = useCallback((evt) => dispatch({ type: \"setTargetTemperature\", temperature: parseFloat(evt.target.value) }), [dispatch]);\n\n    useEffect(() => {\n        setDirty(false);\n    }, []);\n\n    return { setDirty, isDirty, selectedDay, setPoint, copyDays, removeSetPoint, loadSetPoint, newSetPoint, selectDay, saveSetPoint, setStart, setTargetTemperature };\n};\n\nlet cachedPlan = false;\nexport const usePlan = (id: string, keep: boolean = true) => {\n    const dispatch = usePlanDispatch();\n\n    const plan = usePlanGlobalState(\"plan\");\n    const loaded = usePlanGlobalState(\"loaded\");\n    const isDirty = usePlanGlobalState(\"dirty\");\n\n    if (!loaded || !keep) {\n        if ((id == null || id === \"new\") && !cachedPlan) {\n            cachedPlan = true;\n            dispatch({\n                type: \"loadPlan\", plan: {\n                    id: uuidv1(),\n                    enabled: false,\n                    name: \"\",\n                    zones: [],\n                    devices: [],\n                    schedule: [],\n                    overrides: undefined,\n                },\n            });\n        } else {\n            if (!cachedPlan) {\n                throw planAPI.fetchPlanById(id).then((p) => {\n                    cachedPlan = true;\n                    dispatch({ type: \"loadPlan\", plan: p });\n                });\n            }\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            cachedPlan = false;\n        };\n    }, [id, keep]);\n\n    return { plan, isDirty, loaded };\n};\n","import Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React, { useState } from \"react\";\nimport translate from \"../i18n/Translation\";\nimport Transition from \"./Transition\";\n\ntype ExternalProps = {\n  title?: string;\n  content: string;\n};\n\ntype Props = {\n  open: boolean;\n\n  onOK: () => void;\n  onCancel: () => void;\n} & ExternalProps;\n\nconst ConfirmDialog: React.FunctionComponent<Props> = (props: Props) => {\n  const { open, title, content, onOK, onCancel, ...others } = props;\n\n  return (\n    <Dialog open={open} onClose={() => { onCancel(); }} TransitionComponent={Transition}  {...others}>\n      <DialogTitle>{title || translate(\"confirm.title\")}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {content}\n        </DialogContentText>\n\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => { onCancel(); }} color=\"primary\">\n          {translate(\"confirm.cancel\")}\n        </Button>\n\n        <Button onClick={() => { onOK(); }} color=\"primary\">\n          {translate(\"confirm.ok\")}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const useConfirmDialog = (props: { onConfirm: () => void } & ExternalProps) => {\n  const { onConfirm, ...others } = props;\n  const [open, setIsOpen] = useState(false);\n\n  const dialog = (\n    <ConfirmDialog open={open} onCancel={() => { setIsOpen(false); }} onOK={onConfirm} {...others} />\n  );\n\n  return {\n    dialog, isOpen: open, open: () => {\n      setIsOpen(true);\n    },\n  };\n};\n","import { BusinessCenter, DirectionsWalk, FreeBreakfast, Home, Hotel, HotTub, People } from \"@material-ui/icons\";\nimport React from \"react\";\n\ntype Props = {\n    name: string,\n};\n\nexport default function ZoneIcon(props: Props) {\n    switch (props.name) {\n        case \"home\":\n            return (<Home />);\n\n        case \"bed\":\n            return (<Hotel />);\n\n        case \"living\":\n            return (<People />);\n\n        case \"toilet\":\n        case \"shower\":\n            return (<HotTub />);\n\n        case \"books\":\n        case \"study\":\n            return (<BusinessCenter />);\n\n        case \"kitchen\":\n            return (<FreeBreakfast />);\n\n        default:\n            return (<DirectionsWalk />);\n    }\n}\n","import { useEffect } from \"react\";\nimport { deviceAPI } from \"../api/devices\";\nimport { usePlanDispatch, usePlanGlobalState } from \"./PlanProvider\";\n\nlet loadingDevices = false;\nexport const useDevices = (keep?: boolean) => {\n    const dispatch = usePlanDispatch();\n    const devices = usePlanGlobalState(\"devices\");\n\n    if (!keep && !loadingDevices) {\n        loadingDevices = true;\n        throw deviceAPI.fetchHeatingDevices().then((d) => {\n            dispatch({ type: \"loadDevices\", devices: d });\n        });\n    }\n\n    useEffect(() => {\n        return () => {\n            loadingDevices = false;\n        };\n    }, [keep]);\n\n    return devices;\n};\n","import { useEffect } from \"react\";\nimport { zoneAPI } from \"../api/zones\";\nimport { usePlanDispatch, usePlanGlobalState } from \"./PlanProvider\";\n\nlet loadingZones = false;\nexport const useZones = (keep?: boolean) => {\n    const dispatch = usePlanDispatch();\n    const zones = usePlanGlobalState(\"zones\");\n\n    if (!keep && !loadingZones) {\n        loadingZones = true;\n        throw zoneAPI.fetchHeatingZones().then((z) => {\n            dispatch({ type: \"loadZones\", zones: z });\n        });\n    }\n\n    useEffect(() => {\n        return () => {\n            loadingZones = false;\n        };\n    }, [keep]);\n\n    return zones;\n};\n","import { IHeatingPlan } from \"@app/model\";\nimport { Button, LinearProgress, Tab, Tabs } from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { StyleRulesCallback, withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport BackIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport RemoveIcon from \"@material-ui/icons/Delete\";\nimport CopyIcon from \"@material-ui/icons/FileCopy\";\nimport { map } from \"lodash\";\nimport { InjectedNotistackProps, withSnackbar } from \"notistack\";\nimport React, { Fragment, ReactNode, useEffect, useState } from \"react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ScrollLocky } from \"react-scroll-locky\";\nimport * as uuidv1 from \"uuid/v1\";\nimport { planAPI } from \"../api/heating\";\nimport AppHeader from \"../components/AppHeader\";\nimport BodyText from \"../components/BodyText\";\nimport { useConfirmDialog } from \"../components/ConfirmDialog\";\nimport FormTextField from \"../components/FormTextField\";\nimport ZoneIcon from \"../components/Icons\";\nimport { MenuButton } from \"../components/Menu\";\nimport SubHeader from \"../components/SubHeader\";\nimport translate from \"../i18n/Translation\";\nimport Page from \"../layouts/Page\";\nimport { useDevices } from \"../state/deviceHooks\";\nimport { useModifyPlan, usePlan } from \"../state/planHooks\";\nimport { useZones } from \"../state/zoneHooks\";\n\nconst CloneDialog = React.lazy(() => import(\"../dialogs/CloneDialog\"));\nconst Chart = React.lazy(() => import(\"../components/TemperatureChart\"));\n\nconst styles: StyleRulesCallback = (theme) => ({\n    button: {\n        margin: theme.spacing.unit * 2,\n    },\n\n    divider: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 1,\n    },\n\n    avatar: {\n        // padding: \"3px\",\n        width: \"24px\",\n        height: \"24px\",\n    },\n});\n\ntype Params = {\n    id: string;\n};\n\ntype Props = WithStyles<typeof styles>\n    & RouteComponentProps<Params, any, boolean>\n    & InjectedNotistackProps;\n\ntype TabProps = {\n    id: number,\n    activeTab: number,\n    children?: ReactNode,\n};\n\nconst TabContainer: React.FunctionComponent<TabProps> = (props) => {\n    const { children, id, activeTab } = props;\n\n    return (\n        <React.Suspense fallback={<LinearProgress style={{margin: 16}} color=\"secondary\" />}>\n            {id === activeTab && children}\n        </React.Suspense>\n    );\n};\n\nconst PlanOverviewPage: React.FunctionComponent<Props> = (props) => {\n    const { classes } = props;\n    const [selectedTab, selectTab] = React.useState(0);\n\n    const { plan, isDirty } = usePlan(\n        props.match.params.id,\n        props.location.state === true,\n    );\n\n    const { setName, setDescription, toggleState, toggleZone, toggleDevice } = useModifyPlan();\n\n    const zones = useZones(props.location.state === true);\n    const devices = useDevices(props.location.state === true);\n\n    useEffect(() => {\n        setIsCloneDialogOpen(false);\n        // we use 1 as tab (which is true)\n        selectTab(props.location.state === true ? 1 : 0);\n    }, [props.location]);\n\n    const [isCloneDialogOpen, setIsCloneDialogOpen] = useState(false);\n\n    const { dialog: confirmRemoveDialog, open: openConfirmRemove, isOpen: isConfirmRemoveOpen } = useConfirmDialog({\n        title: translate(\"plan.confirm.title\"),\n        content: translate(\"plan.confirm.content\"),\n        onConfirm: () => { removePlan(); },\n    });\n\n    const save = () => {\n        planAPI.updatePlan(plan as IHeatingPlan).then((_p) => {\n            props.history.push({\n                pathname: `/`,\n                state: false,\n            });\n\n            props.enqueueSnackbar(translate(\"plan.saved\", {\n                name: plan.name,\n            }));\n        });\n    };\n\n    const removePlan = () => {\n        planAPI.removePlan(plan.id).then((_p) => {\n            props.history.push({\n                pathname: `/`,\n                state: false,\n            });\n\n            props.enqueueSnackbar(translate(\"plan.removed\", {\n                name: plan.name,\n            }));\n        });\n    };\n\n    const duplicatePlan = (name: string) => {\n        const newPlan = { ...plan, enabled: false, id: uuidv1(), name } as IHeatingPlan;\n\n        planAPI.updatePlan(newPlan).then((_p) => {\n            props.history.push({\n                pathname: `/plans/${newPlan.id}`,\n                state: false,\n            });\n\n            props.enqueueSnackbar(translate(\"plan.duplicated\", {\n                name: plan.name,\n            }));\n        }).catch((r: any) => {\n            throw r;\n        });\n    };\n\n    return (\n        <Fragment>\n            {confirmRemoveDialog}\n\n            <CloneDialog\n                open={isCloneDialogOpen}\n                name={plan.name}\n                onConfirm={duplicatePlan}\n                onCancel={() => { setIsCloneDialogOpen(false); }}\n            />\n\n            <Page>\n                {{\n                    header: (\n                        <AppHeader>\n                            {{\n                                title: plan.name || translate(\"plan.unnamed\"),\n                                button: (\n                                    <MenuButton first={true} {...{ to: `/` }} component={Link as unknown as \"a\"} icon={isDirty ? <CancelIcon /> : <BackIcon />} />\n                                ),\n                                actions: (\n                                    <Fragment>\n                                        {plan.id !== \"new\" && !isDirty &&\n                                            <MenuButton onClick={() => { setIsCloneDialogOpen(true); }} icon={<CopyIcon />} />\n                                        }\n\n                                        {plan.id !== \"new\" &&\n                                            <MenuButton onClick={openConfirmRemove} icon={<RemoveIcon />} />\n                                        }\n\n                                        {isDirty &&\n                                            <Button color=\"inherit\" onClick={save}>\n                                                {translate(\"plan.save\")}\n                                            </Button>\n                                        }\n                                    </Fragment>\n                                ),\n                                subBar: (\n                                    <Tabs value={selectedTab} onChange={(_e, v) => selectTab(v)} variant=\"scrollable\" scrollButtons=\"off\" >\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"plan.tabs.overview\")} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"plan.tabs.schedule\")} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"plan.tabs.zones\", { n: plan.zones.length })} />\n                                        <Tab classes={{ root: props.classes.tab }} disableRipple={true} label={translate(\"plan.tabs.devices\", { n: plan.devices.length })} />\n                                    </Tabs>\n                                ),\n                            }}\n                        </AppHeader>\n\n                    ),\n                    paddingTop: 100,\n                    body: (\n                        <ScrollLocky enabled={isCloneDialogOpen || isConfirmRemoveOpen} isolation={false}>\n                            <Fragment>\n                                <TabContainer id={0} activeTab={selectedTab}>\n                                    <SubHeader text={translate(\"plan.overview.section\")} />\n                                    <BodyText text={translate(\"plan.overview.text\")} />\n\n                                    <FormTextField\n                                        label={translate(\"plan.overview.name.label\")}\n                                        placeholder={translate(\"plan.overview.name.placeholder\")}\n\n                                        value={plan.name}\n                                        onChange={setName}\n                                    />\n\n                                    <BodyText style={{ paddingTop: 16 }} text={translate(\"plan.overview.text_enable\")} />\n                                    <FormControlLabel\n                                        control={\n                                            <Switch\n                                                onChange={toggleState}\n                                                checked={plan.enabled}\n                                            />\n                                        }\n                                        label={translate(\"plan.overview.enabled.label\")}\n                                        labelPlacement=\"start\"\n                                    />\n\n                                    <BodyText style={{ paddingTop: 16 }} text={translate(\"plan.overview.text_description\")} />\n                                    <FormTextField\n                                        label={translate(\"plan.overview.description.label\")}\n                                        placeholder={translate(\"plan.overview.description.placeholder\")}\n\n                                        multiline={true}\n                                        value={plan.description}\n                                        onChange={setDescription}\n                                    />\n                                </TabContainer>\n\n                                <TabContainer id={1} activeTab={selectedTab}>\n                                    <SubHeader text={translate(\"plan.schedules.section\")} />\n                                    <BodyText text={translate(\"plan.schedules.text\")} />\n\n                                    <div style={{ paddingTop: 16, display: \"flex\", flexDirection: \"row\" }}>\n                                        <Link style={{ textDecoration: \"none\" }} to={{ pathname: `/plans/${plan.id}/schedule`, state: plan }} replace={true}>\n                                            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                                                {translate(\"plan.schedules.edit\")}\n                                            </Button>\n                                        </Link>\n\n                                        <Link style={{ textDecoration: \"none\" }} to={{ pathname: `/plans/${plan.id}/exceptions`, state: plan }} replace={true}>\n                                            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                                                {translate(\"plan.schedules.exceptions\")}\n                                            </Button>\n                                        </Link>\n                                    </div>\n\n                                    {plan.schedule.length !== 0 && <SubHeader text={translate(\"plan.schedules.section_summary\")} />}\n                                    {plan.schedule.length !== 0 && <Chart plan={plan as IHeatingPlan} />}\n                                </TabContainer>\n\n                                <TabContainer id={2} activeTab={selectedTab}>\n                                    <SubHeader text={translate(\"plan.zones.section\")} />\n                                    <BodyText text={translate(\"plan.zones.text\")} />\n\n                                    {zones.length === 0\n                                        ? <BodyText style={{ paddingTop: 16 }} text={translate(\"plan.zones.empty\")} />\n                                        : <List>\n                                            {map(zones, (zone) => (\n                                                <ListItem key={zone.id} button={true} onClick={() => toggleZone(zone.id)}>\n                                                    {zone.icon != null &&\n                                                        <ListItemAvatar>\n                                                            <ZoneIcon name={zone.icon} />\n                                                        </ListItemAvatar>\n                                                    }\n                                                    <ListItemText primary={zone.name} />\n                                                    <ListItemSecondaryAction>\n                                                        <Checkbox onChange={() => toggleZone(zone.id)} checked={plan.zones.find((c) => c === zone.id) != null} />\n                                                    </ListItemSecondaryAction>\n                                                </ListItem>\n                                            ))}\n                                        </List>\n                                    }\n                                </TabContainer>\n\n                                <TabContainer id={3} activeTab={selectedTab}>\n                                    <SubHeader text={translate(\"plan.devices.section\")} />\n                                    <BodyText text={translate(\"plan.devices.text\")} />\n\n                                    {devices.length === 0\n                                        ? <BodyText style={{ paddingTop: 16 }} text={translate(\"plan.devices.empty\")} />\n                                        : <List>\n                                            {map(devices, (device) => (\n                                                <ListItem key={device.id} button={true} onClick={() => toggleDevice(device.id)}>\n                                                    {device.icon != null &&\n                                                        <ListItemAvatar>\n                                                            <Avatar className={classes.avatar} src={`${__PRODUCTION__ ? \"\" : __HOMEY_DEV_URL}${device.icon}`} />\n                                                        </ListItemAvatar>\n                                                    }\n                                                    <ListItemText primary={device.name} />\n                                                    <ListItemSecondaryAction>\n                                                        <Checkbox onChange={() => toggleDevice(device.id)} checked={plan.devices.find((c) => c === device.id) != null} />\n                                                    </ListItemSecondaryAction>\n                                                </ListItem>\n                                            ))}\n                                        </List>\n                                    }\n                                </TabContainer>\n                            </Fragment>\n                        </ScrollLocky>\n                    ),\n                }}\n            </Page>\n        </Fragment>\n    );\n};\n\nexport default withSnackbar(withRouter(withStyles(styles)(PlanOverviewPage)));\n"],"sourceRoot":""}