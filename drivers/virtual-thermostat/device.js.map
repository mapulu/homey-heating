{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///external \"tsyringe\"","webpack:///external \"reflect-metadata\"","webpack:///external \"@app/model\"","webpack:///./src/drivers/virtual-thermostat/device.ts","webpack:///external \"lodash\"","webpack:///external \"@app/services\"","webpack:///external \"homey\"","webpack:///external \"@app/helper\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","b","setPrototypeOf","__proto__","Array","__","this","constructor","assign","arguments","length","apply","e","indexOf","getOwnPropertySymbols","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","iterator","v","op","TypeError","pop","push","ar","error","concat","asyncIterator","q","a","resume","fulfill","settle","shift","cooked","raw","mod","k","default","require","helper_1","model_1","services_1","homey_1","lodash_1","tsyringe_1","VirtualThermostat","Device","[object Object]","plan","undefined","BootStrapper","id","getData","factory","container","LoggerFactory","logger","createLogger","createSubLogger","information","getName","repository","HeatingPlanRepositoryService","manager","HeatingManagerService","devices","DeviceManagerService","flow","settings","SettingsManagerService","tryRegisterCapability","CapabilityType","TargetTemperature","AsyncDebounce","onTargetTemperatureChanged","InternalSettings","DriverDebounce","ThermostatOverride","onThermostatModeChanged","repositoryChanged","plansChanged","capabilitiesChanged","capabilititesChanged","plansApplied","scheduleChanged","onChanged","subscribe","onCapabilityChanged","onPlansApplied","find","updateCapabilitiesFromPlan","updateTemperature","unsubscribe","toString","_rep","plans","all","filter","pc","map","change","tslib_1","event","PlanChangeEventType","Removed","_scheduler","evt","debug","calculation","schedule","doSetCapbilityValue","adjustTemperatureValue","targetTemperature","_devices","capability","MeasureTemperature","found","device","zones","zone","callback","getCapabilities","registerCapabilityListener","type","val","getCapabilityValue","setCapabilityValue","num","Math","round","min","max","evaluatePlan","sum","forEach","temperature","setUnavailable","getAvailable","unsetWarning","setAvailable","thermostatMode","NormalOperationMode","Automatic","enabled","ThermostatMode","FullManual","thermostatModeChanged","trigger","dev","_opts","parseInt","update","OverrideDay","findDevice","getDevicesForZone","setTemperature","trycatchlog","HeatingSchedulerService"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,sCClFAnC,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,8BAAAC,IAAArC,EAAAU,EAAA0B,EAAA,6BAAAE,IAAAtC,EAAAU,EAAA0B,EAAA,2BAAAG,IAAAvC,EAAAU,EAAA0B,EAAA,+BAAAI,IAAAxC,EAAAU,EAAA0B,EAAA,4BAAAK,IAAAzC,EAAAU,EAAA0B,EAAA,+BAAAM,IAAA1C,EAAAU,EAAA0B,EAAA,8BAAAO,IAAA3C,EAAAU,EAAA0B,EAAA,gCAAAQ,IAAA5C,EAAAU,EAAA0B,EAAA,iCAAAS,IAAA7C,EAAAU,EAAA0B,EAAA,6BAAAU,IAAA9C,EAAAU,EAAA0B,EAAA,2BAAAW,IAAA/C,EAAAU,EAAA0B,EAAA,6BAAAY,IAAAhD,EAAAU,EAAA0B,EAAA,4BAAAa,IAAAjD,EAAAU,EAAA0B,EAAA,qCAAAc,IAAAlD,EAAAU,EAAA0B,EAAA,qCAAAe,IAAAnD,EAAAU,EAAA0B,EAAA,kCAAAgB,IAAApD,EAAAU,EAAA0B,EAAA,yCAAAiB,IAAArD,EAAAU,EAAA0B,EAAA,iCAAAkB,IAAAtD,EAAAU,EAAA0B,EAAA,oCAAAmB;;;;;;;;;;;;;;;AAgBA,IAAAC,EAAA,SAAA9C,EAAA+C,GAIA,OAHAD,EAAA1C,OAAA4C,gBACA,CAAUC,UAAA,cAAgBC,OAAA,SAAAlD,EAAA+C,GAAsC/C,EAAAiD,UAAAF,IAChE,SAAA/C,EAAA+C,GAAyB,QAAAvB,KAAAuB,IAAAxB,eAAAC,KAAAxB,EAAAwB,GAAAuB,EAAAvB,MACzBxB,EAAA+C,IAGO,SAAApB,EAAA3B,EAAA+C,GAEP,SAAAI,IAAmBC,KAAAC,YAAArD,EADnB8C,EAAA9C,EAAA+C,GAEA/C,EAAAsB,UAAA,OAAAyB,EAAA3C,OAAAY,OAAA+B,IAAAI,EAAA7B,UAAAyB,EAAAzB,UAAA,IAAA6B,GAGO,IAAAvB,EAAA,WAQP,OAPAA,EAAAxB,OAAAkD,QAAA,SAAA1C,GACA,QAAAa,EAAA/B,EAAA,EAAAyB,EAAAoC,UAAAC,OAAgD9D,EAAAyB,EAAOzB,IAEvD,QAAA8B,KADAC,EAAA8B,UAAA7D,GACAU,OAAAkB,UAAAC,eAAA1B,KAAA4B,EAAAD,KAAAZ,EAAAY,GAAAC,EAAAD,IAEA,OAAAZ,IAEA6C,MAAAL,KAAAG,YAGO,SAAA1B,EAAAJ,EAAAiC,GACP,IAAA9C,EAAA,GACA,QAAAY,KAAAC,EAAArB,OAAAkB,UAAAC,eAAA1B,KAAA4B,EAAAD,IAAAkC,EAAAC,QAAAnC,GAAA,IACAZ,EAAAY,GAAAC,EAAAD,IACA,SAAAC,GAAA,mBAAArB,OAAAwD,sBACA,KAAAlE,EAAA,MAAA8B,EAAApB,OAAAwD,sBAAAnC,GAA4D/B,EAAA8B,EAAAgC,OAAc9D,IAAAgE,EAAAC,QAAAnC,EAAA9B,IAAA,IAC1EkB,EAAAY,EAAA9B,IAAA+B,EAAAD,EAAA9B,KACA,OAAAkB,EAGO,SAAAkB,EAAA+B,EAAAC,EAAA7C,EAAA8C,GACP,IAAA/D,EAAAD,EAAAwD,UAAAC,OAAAhD,EAAAT,EAAA,EAAA+D,EAAA,OAAAC,IAAA3D,OAAA4D,yBAAAF,EAAA7C,GAAA8C,EACA,oBAAAE,SAAA,mBAAAA,QAAAC,SAAA1D,EAAAyD,QAAAC,SAAAL,EAAAC,EAAA7C,EAAA8C,QACA,QAAArE,EAAAmE,EAAAL,OAAA,EAA4C9D,GAAA,EAAQA,KAAAM,EAAA6D,EAAAnE,MAAAc,GAAAT,EAAA,EAAAC,EAAAQ,GAAAT,EAAA,EAAAC,EAAA8D,EAAA7C,EAAAT,GAAAR,EAAA8D,EAAA7C,KAAAT,GACpD,OAAAT,EAAA,GAAAS,GAAAJ,OAAAC,eAAAyD,EAAA7C,EAAAT,KAGO,SAAAuB,EAAAoC,EAAAC,GACP,gBAAAN,EAAA7C,GAAmCmD,EAAAN,EAAA7C,EAAAkD,IAG5B,SAAAnC,EAAAqC,EAAAC,GACP,oBAAAL,SAAA,mBAAAA,QAAAM,SAAA,OAAAN,QAAAM,SAAAF,EAAAC,GAGO,SAAArC,EAAAuC,EAAAC,EAAAC,EAAAC,GACP,WAAAD,MAAAE,UAAA,SAAAC,EAAAC,GACA,SAAAC,EAAApE,GAAmC,IAAMqE,EAAAL,EAAAM,KAAAtE,IAA+B,MAAA+C,GAAYoB,EAAApB,IACpF,SAAAwB,EAAAvE,GAAkC,IAAMqE,EAAAL,EAAA,MAAAhE,IAAmC,MAAA+C,GAAYoB,EAAApB,IACvF,SAAAsB,EAAAG,GAA+BA,EAAAC,KAAAP,EAAAM,EAAAxE,OAAA,IAAA+D,EAAA,SAAAG,GAAiEA,EAAAM,EAAAxE,SAAyB0E,KAAAN,EAAAG,GACzHF,GAAAL,IAAAlB,MAAAe,EAAAC,GAAA,KAAAQ,UAIO,SAAA/C,EAAAsC,EAAAc,GACP,IAAwGC,EAAAC,EAAA5E,EAAA6E,EAAxGC,EAAA,CAAaC,MAAA,EAAAC,KAAA,WAA6B,KAAAhF,EAAA,SAAAA,EAAA,GAA0B,OAAAA,EAAA,IAAeiF,KAAA,GAAAC,IAAA,IACnF,OAAAL,EAAA,CAAgBR,KAAAc,EAAA,GAAAC,MAAAD,EAAA,GAAAE,OAAAF,EAAA,IAAqD,mBAAAtF,SAAAgF,EAAAhF,OAAAyF,UAAA,WAAoE,OAAA9C,OAAeqC,EACxJ,SAAAM,EAAA5E,GAAsB,gBAAAgF,GAAsB,OAC5C,SAAAC,GACA,GAAAb,EAAA,UAAAc,UAAA,mCACA,KAAAX,GAAA,IACA,GAAAH,EAAA,EAAAC,IAAA5E,EAAA,EAAAwF,EAAA,GAAAZ,EAAA,OAAAY,EAAA,GAAAZ,EAAA,SAAA5E,EAAA4E,EAAA,SAAA5E,EAAAf,KAAA2F,GAAA,GAAAA,EAAAP,SAAArE,IAAAf,KAAA2F,EAAAY,EAAA,KAAAhB,KAAA,OAAAxE,EAEA,OADA4E,EAAA,EAAA5E,IAAAwF,EAAA,GAAAA,EAAA,GAAAxF,EAAAD,QACAyF,EAAA,IACA,cAAAxF,EAAAwF,EAAuC,MACvC,OAAkC,OAAlCV,EAAAC,QAAkC,CAAShF,MAAAyF,EAAA,GAAAhB,MAAA,GAC3C,OAAAM,EAAAC,QAAkCH,EAAAY,EAAA,GAAWA,EAAA,IAAU,SACvD,OAAAA,EAAAV,EAAAI,IAAAQ,MAAyCZ,EAAAG,KAAAS,MAAc,SACvD,QACA,KAAA1F,KAAA8E,EAAAG,MAAArC,OAAA,GAAA5C,IAAA4C,OAAA,UAAA4C,EAAA,QAAAA,EAAA,KAA6GV,EAAA,EAAO,SACpH,OAAAU,EAAA,MAAAxF,GAAAwF,EAAA,GAAAxF,EAAA,IAAAwF,EAAA,GAAAxF,EAAA,KAAgF8E,EAAAC,MAAAS,EAAA,GAAiB,MACjG,OAAAA,EAAA,IAAAV,EAAAC,MAAA/E,EAAA,IAAwD8E,EAAAC,MAAA/E,EAAA,GAAgBA,EAAAwF,EAAQ,MAChF,GAAAxF,GAAA8E,EAAAC,MAAA/E,EAAA,IAA8C8E,EAAAC,MAAA/E,EAAA,GAAgB8E,EAAAI,IAAAS,KAAAH,GAAgB,MAC9ExF,EAAA,IAAA8E,EAAAI,IAAAQ,MACAZ,EAAAG,KAAAS,MAAiC,SAEjCF,EAAAd,EAAAzF,KAAA2E,EAAAkB,GACS,MAAAhC,GAAY0C,EAAA,GAAA1C,GAAa8B,EAAA,EAAS,QAAUD,EAAA3E,EAAA,EACrD,KAAAwF,EAAA,SAAAA,EAAA,GAAmC,OAASzF,MAAAyF,EAAA,GAAAA,EAAA,UAAAhB,MAAA,GArBAJ,CAAA,CAAA7D,EAAAgF,MAyBrC,SAAAhE,EAAArC,EAAAN,GACP,QAAAgC,KAAA1B,EAAAN,EAAA+B,eAAAC,KAAAhC,EAAAgC,GAAA1B,EAAA0B,IAGO,SAAAY,EAAAjC,GACP,IAAAL,EAAA,mBAAAW,QAAAN,EAAAM,OAAAyF,UAAAxG,EAAA,EACA,OAAAI,IAAAD,KAAAM,GACA,CACA8E,KAAA,WAEA,OADA9E,GAAAT,GAAAS,EAAAqD,SAAArD,OAAA,GACA,CAAoBQ,MAAAR,KAAAT,KAAA0F,MAAAjF,KAKb,SAAAkC,EAAAlC,EAAAgB,GACP,IAAArB,EAAA,mBAAAW,QAAAN,EAAAM,OAAAyF,UACA,IAAApG,EAAA,OAAAK,EACA,IAAAK,EAAAkD,EAAAhE,EAAAI,EAAAD,KAAAM,GAAAqG,EAAA,GACA,IACA,eAAArF,QAAA,MAAAX,EAAAd,EAAAuF,QAAAG,MAAAoB,EAAAD,KAAA/F,EAAAG,OAEA,MAAA8F,GAAmB/C,EAAA,CAAM+C,SACzB,QACA,IACAjG,MAAA4E,OAAAtF,EAAAJ,EAAA,SAAAI,EAAAD,KAAAH,GAEA,QAAiB,GAAAgE,EAAA,MAAAA,EAAA+C,OAEjB,OAAAD,EAGO,SAAAlE,IACP,QAAAkE,EAAA,GAAA9G,EAAA,EAA4BA,EAAA6D,UAAAC,OAAsB9D,IAClD8G,IAAAE,OAAArE,EAAAkB,UAAA7D,KACA,OAAA8G,EAGO,SAAAjE,EAAA4D,GACP,OAAA/C,gBAAAb,GAAAa,KAAA+C,IAAA/C,MAAA,IAAAb,EAAA4D,GAGO,SAAA3D,EAAAgC,EAAAC,EAAAE,GACP,IAAAlE,OAAAkG,cAAA,UAAAN,UAAA,wCACA,IAAA3G,EAAA+F,EAAAd,EAAAlB,MAAAe,EAAAC,GAAA,IAAAmC,EAAA,GACA,OAAAlH,EAAA,GAAiBqG,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAArG,EAAAe,OAAAkG,eAAA,WAAsF,OAAAvD,MAAe1D,EACtH,SAAAqG,EAAA5E,GAAsBsE,EAAAtE,KAAAzB,EAAAyB,GAAA,SAAAgF,GAAgC,WAAAvB,QAAA,SAAAiC,EAAA9D,GAAqC6D,EAAAL,KAAA,CAAApF,EAAAgF,EAAAU,EAAA9D,IAAA,GAAA+D,EAAA3F,EAAAgF,OAC3F,SAAAW,EAAA3F,EAAAgF,GAA2B,KAC3B3F,EADiCiF,EAAAtE,GAAAgF,IACXxF,iBAAA4B,EAAAqC,QAAAC,QAAArE,EAAAG,MAAAwF,GAAAd,KAAA0B,EAAAjC,GAAAkC,EAAAJ,EAAA,MAAApG,GAD4B,MAAAkD,GAAYsD,EAAAJ,EAAA,MAAAlD,GAC9D,IAAAlD,EACA,SAAAuG,EAAApG,GAA6BmG,EAAA,OAAAnG,GAC7B,SAAAmE,EAAAnE,GAA4BmG,EAAA,QAAAnG,GAC5B,SAAAqG,EAAAzB,EAAAY,GAA2BZ,EAAAY,GAAAS,EAAAK,QAAAL,EAAApD,QAAAsD,EAAAF,EAAA,MAAAA,EAAA,QAGpB,SAAAnE,EAAAtC,GACP,IAAAT,EAAA8B,EACA,OAAA9B,EAAA,GAAiBqG,EAAA,QAAAA,EAAA,iBAAArC,GAA4C,MAAAA,IAAWqC,EAAA,UAAArG,EAAAe,OAAAyF,UAAA,WAAqD,OAAA9C,MAAe1D,EAC5I,SAAAqG,EAAA5E,EAAAoE,GAAyB7F,EAAAyB,GAAAhB,EAAAgB,GAAA,SAAAgF,GAA6B,OAAA3E,MAAA,CAAoBb,MAAA4B,EAAApC,EAAAgB,GAAAgF,IAAAf,KAAA,WAAAjE,GAAgDoE,IAAAY,MAAkBZ,GAGrI,SAAA7C,EAAAvC,GACP,IAAAM,OAAAkG,cAAA,UAAAN,UAAA,wCACA,IAAA3G,EAAAI,EAAAK,EAAAM,OAAAkG,eACA,OAAA7G,IAAAD,KAAAM,MAAAiC,EAAAjC,GAAAT,EAAA,GAA2GqG,EAAA,QAAAA,EAAA,SAAAA,EAAA,UAAArG,EAAAe,OAAAkG,eAAA,WAAsF,OAAAvD,MAAe1D,GAChN,SAAAqG,EAAA5E,GAAsBzB,EAAAyB,GAAAhB,EAAAgB,IAAA,SAAAgF,GAA8B,WAAAvB,QAAA,SAAAC,EAAAC,IACpD,SAAAD,EAAAC,EAAA9E,EAAAmG,GAA4CvB,QAAAC,QAAAsB,GAAAd,KAAA,SAAAc,GAAsCtB,EAAA,CAAUlE,MAAAwF,EAAAf,KAAApF,KAAwB8E,IADhBkC,CAAAnC,EAAAC,GAAAqB,EAAAhG,EAAAgB,GAAAgF,IAAAf,KAAAe,EAAAxF,WAI7F,SAAAgC,EAAAuE,EAAAC,GAEP,OADA/G,OAAAC,eAAgCD,OAAAC,eAAA6G,EAAA,OAAuCvG,MAAAwG,IAAwBD,EAAAC,MAC/FD,EAGO,SAAAtE,EAAAwE,GACP,GAAAA,KAAAtG,WAAA,OAAAsG,EACA,IAAAjC,EAAA,GACA,SAAAiC,EAAA,QAAAC,KAAAD,EAAAhH,OAAAmB,eAAA1B,KAAAuH,EAAAC,KAAAlC,EAAAkC,GAAAD,EAAAC,IAEA,OADAlC,EAAAmC,QAAAF,EACAjC,EAGO,SAAAtC,EAAAuE,GACP,OAAAA,KAAAtG,WAAAsG,EAAA,CAA4CE,QAAAF,qBCxL5C3H,EAAAD,QAAA+H,QAAA,8BCAA9H,EAAAD,QAAA+H,QAAA,sCCAA9H,EAAAD,QAAA+H,QAAA,8GCCAjI,EAAA,IAGA,MAAAkI,EAAAlI,EAAA,GACAmI,EAAAnI,EAAA,IACAoI,EAAApI,EAAA,GAMAqI,EAAArI,EAAA,GACAsI,EAAAtI,EAAA,GAEAuI,EAAAvI,EAAA,GAOA,MAAMwI,UAA0BH,EAAAI,OAAhCC,kCASY5E,KAAA6E,UAAiCC,EAO5BF,iEACHN,EAAAS,eACN/E,KAAKgF,GAAKhF,KAAKiF,UAAgBD,GAE/B,MAAME,EAAUT,EAAAU,UAAU1D,QAAuB6C,EAAAc,eACjDpF,KAAKqF,OAASH,EAAQI,aAAa,UAAUC,gBAAmDvF,KAAKgF,IACrGhF,KAAKqF,OAAOG,+BAA+BxF,KAAKyF,aAGhDzF,KAAK0F,WAAajB,EAAAU,UAAU1D,QAAsC6C,EAAAqB,8BAClE3F,KAAK4F,QAAUnB,EAAAU,UAAU1D,QAA+B6C,EAAAuB,uBACxD7F,KAAK8F,QAAUrB,EAAAU,UAAU1D,QAA8B6C,EAAAyB,sBACvD/F,KAAKgG,KAAOvB,EAAAU,UAAU1D,QAAqB,eAE3C,MAAMwE,EAAWxB,EAAAU,UAAU1D,QAAgC6C,EAAA4B,wBAG3DlG,KAAKmG,sBAAsB7B,EAAA8B,eAAeC,kBACtCjC,EAAAkC,cAActG,KAAKuG,2BAA2BzI,KAAKkC,MAAOiG,EAAS9I,IAAYmH,EAAAkC,iBAAiBC,eAAgB,OAEpHzG,KAAKmG,sBAAsB7B,EAAA8B,eAAeM,mBACtCtC,EAAAkC,cAActG,KAAK2G,wBAAwB7I,KAAKkC,MAAOiG,EAAS9I,IAAYmH,EAAAkC,iBAAiBC,eAAgB,OAEjHzG,KAAK4G,kBAAoB5G,KAAK6G,aAAa/I,KAAKkC,MAChDA,KAAK8G,oBAAsB9G,KAAK+G,qBAAqBjJ,KAAKkC,MAC1DA,KAAKgH,aAAehH,KAAKiH,gBAAgBnJ,KAAKkC,MAG9CA,KAAK0F,WAAWwB,UAAUC,UAAUnH,KAAK4G,mBACzC5G,KAAK8F,QAAQsB,oBAAoBD,UAAUnH,KAAK8G,qBAChD9G,KAAK4F,QAAQyB,eAAeF,UAAUnH,KAAKgH,cAG3ChH,KAAK6E,WAAa7E,KAAK0F,WAAW4B,KAAKtH,KAAKgF,UACtChF,KAAKuH,mCACLvH,KAAKwH,sBAIF5C,8DACT5E,KAAK0F,WAAWwB,UAAUO,YAAYzH,KAAK4G,mBAC3C5G,KAAK8F,QAAQsB,oBAAoBK,YAAYzH,KAAK8G,qBAClD9G,KAAK4F,QAAQyB,eAAeI,YAAYzH,KAAKgH,cAE7ChH,KAAK6E,UAAOC,SACL9E,KAAK8F,eACL9F,KAAK0F,kBACL1F,KAAK4F,QAEZ5F,KAAKqF,OAAOG,YAAY,iBAGfZ,qBAAqBnH,2DAExBuC,KAAK2G,wBAAwBlJ,EAAKiK,WAAY,QAO1C9C,aAAa+C,EAAoCC,2DACrDpG,QAAQqG,IAAID,EAAME,OAAQC,GAAOA,EAAGlD,KAAKG,KAAOhF,KAAKgF,IAAIgD,IAAWC,GAAUC,EAAArJ,UAAAmB,UAAA,qBAEhFA,KAAK6E,KAAOoD,EAAOE,QAAU7D,EAAA8D,oBAAoBC,aAAUvD,EAAYmD,EAAOpD,KAC9E7E,KAAKqF,OAAOG,wBAAwBlB,EAAA8D,oBAAoBH,EAAOE,gBAGzDnI,KAAKuH,mCACLvH,KAAKwH,0BAQL5C,gBAAgB0D,EAAqCC,qDAE/D,GAAiB,MAAbvI,KAAK6E,KAAgB,OAGzB,IAAKL,EAAA8C,KAAKiB,EAAIX,MAAQxJ,GAAMA,EAAE4G,KAAOhF,KAAKgF,IACtC,OAGJhF,KAAKqF,OAAOmD,MAAM,yCAClB,MAAMC,EAAcjE,EAAAsD,OAAOS,EAAIG,SAAWvG,GAAMA,EAAE0C,KAAKG,KAAOhF,KAAKgF,UAC7DhF,KAAKwH,kBAAkBiB,GAEzBA,EAAYrI,OAAS,UACfJ,KAAK2I,oBAAoBrE,EAAA8B,eAAeC,kBAC1CrG,KAAK4I,uBAAuBH,EAAY,GAAGI,uBAQzCjE,qBAAqBkE,EAAgCP,qDAE/D,GAAiB,MAAbvI,KAAK6E,KAAgB,OAGzB,GAAI0D,EAAIQ,aAAezE,EAAA8B,eAAe4C,mBAClC,OAIJ,IAAIC,EAAQzE,EAAA8C,KAAKtH,KAAK6E,KAAKiB,SAAW,GAAKd,GAAOA,IAAOuD,EAAIW,OAAOlE,KACpEiE,EAAQA,GAASzE,EAAA8C,KAAKtH,KAAK6E,KAAKsE,OAAS,GAAKnE,GAAOA,IAAOuD,EAAIW,OAAOE,SAGnEpJ,KAAKqF,OAAOmD,SAASlE,EAAA8B,eAAe4C,oCAC9BhJ,KAAKwH,uBAYL5C,sBAAsBmE,EAA4BM,qDACvD7E,EAAA8C,KAAKtH,KAAKsJ,kBAAoB3M,GAAMA,IAAMoM,IAG3C/I,KAAKqF,OAAOG,qCAAqCuD,WAG3C/I,KAAKuJ,2BAA2BR,EAAYM,IALlDrJ,KAAKqF,OAAOG,6BAA6BuD,kCAenCnE,oBAAyD4E,EAAsBC,qDACzF,aAAUzJ,KAAK0J,mBAAmBF,MAAUC,IACxCzJ,KAAKqF,OAAOG,mBAAmBgE,OAAUC,WACnCzJ,KAAK2J,mBAAmBH,EAAMC,IAE7B,KAUP7E,uBAAuBgF,GAE3B,OAAOC,KAAKC,MAAuC,IAAjCD,KAAKE,IAAIF,KAAKG,IAAI,EAAGJ,GAAM,KAAa,IAShDhF,kBAAkB6D,qDAC5B,GAAiB,MAAbzI,KAAK6E,KAAgB,OAMzB,GAJA7E,KAAKqF,OAAOmD,kBAAkBlE,EAAA8B,eAAe4C,sBAC1B,MAAfP,IAAuBA,EAAczI,KAAK4F,QAAQqE,aAAajK,KAAK6E,OAG7C,IAAvB4D,EAAYrI,OACZ,OAGJ,IAAI8J,EAAc,EAClBzB,EAAY0B,QAASpH,IACjBmH,GAAOnH,EAAEqH,aAAe,IAIhB,IAARF,IAAaA,EAAMlK,KAAK4I,uBAAuBH,EAAY,GAAGI,oBAElEqB,EAAMlK,KAAK4I,uBAA8C,IAAvBH,EAAYrI,OAAe,EAAI8J,EAAMzB,EAAYrI,QACnFJ,KAAKqF,OAAOmD,MAAM,yBAA0B0B,SAEtClK,KAAK2I,oBAAoBrE,EAAA8B,eAAe4C,mBAAoBkB,KAOxDtF,+EAGV,GAFA5E,KAAKqF,OAAOmD,kBAAkBlE,EAAA8B,eAAeM,0BAA0BpC,EAAA8B,eAAeC,qBAErE,MAAbrG,KAAK6E,KACL7E,KAAKqF,OAAOG,YAAY,qCAClBxF,KAAKqK,eAAe9F,EAAAxE,GAAG,4BAC1B,CACHC,KAAKqF,OAAOmD,oBAAoBxI,KAAKsK,wBAC/BtK,KAAKuK,qBACLvK,KAAKwK,eAGX,IAAIC,EAAyDpG,EAAAqG,oBAAoBC,UAC5E3K,KAAK6E,KAAK+F,QAEwB,MAA5B5K,KAAK6E,KAAK4F,iBACjBA,EAAiBzK,KAAK6E,KAAK4F,gBAF3BA,EAAiBpG,EAAAwG,eAAeC,kBAK1B9K,KAAK2I,oBAAoBrE,EAAA8B,eAAeM,mBAAoB+D,EAAe/C,qBAC3E1H,KAAKgG,KAAK+E,sBAAsBC,QAAQhL,KAAM,CAACvC,KAAM8G,EAAAxE,qBAAqB0K,QAIpF,MAAMQ,EAAMjL,KAAK4F,QACZqE,aAAajK,KAAK6E,MAClBiD,OAAQtK,GAAMA,EAAEiN,iBAAmBpG,EAAAqG,oBAAoBC,WAExDM,EAAI7K,OAAS,UACPJ,KAAK2I,oBAAoBrE,EAAA8B,eAAeC,kBAAmBrG,KAAK4I,uBAAuBqC,EAAI,GAAGpC,wBAYlGjE,wBAAwBrH,EAAe2N,qDACjD,GAAiB,MAAblL,KAAK6E,KAAgB,OACzB7E,KAAKqF,OAAOG,eAAelB,EAAA8B,eAAeM,sBAAsBnJ,KAEhE,MAAME,EAAO0N,SAAS5N,EAAO,IAC7ByC,KAAK6E,KAAK4F,eAAiBhN,QAErBuC,KAAK0F,WAAW0F,OAAOpL,KAAK6E,YAC5B7E,KAAKgG,KAAK+E,sBAAsBC,QAAQhL,KAAM,CAACvC,KAAM8G,EAAAxE,qBAAqBxC,SAUtEqH,2BAA2BrH,EAAe2N,qDACpD,GAAiB,MAAblL,KAAK6E,KAAgB,OAEzB7E,KAAKqF,OAAOG,eAAelB,EAAA8B,eAAeC,qBAAqB9I,KAE3DyC,KAAK6E,KAAK4F,iBAAmBpG,EAAAwG,eAAeC,aAExC9K,KAAK6E,KAAK4F,iBAAmBpG,EAAAwG,eAAeQ,cAC5CrL,KAAK6E,KAAK4F,eAAiBpG,EAAAwG,eAAeQ,YAG1CrL,KAAK0F,WAAW0F,OAAOpL,KAAK6E,MAAM,WAI5B7E,KAAK2I,oBAAoBrE,EAAA8B,eAAeM,mBAAoBrC,EAAAwG,eAAeQ,YAAY3D,qBACvF1H,KAAKgG,KAAK+E,sBAAsBC,QAAQhL,KAAM,CAACvC,KAAM8G,EAAAxE,qBAAqBsE,EAAAwG,eAAeQ,mBAIvG,MAAMvF,EAA2B,IAChC9F,KAAK6E,KAAKiB,SAAW,IAAIqE,QAASnF,IAC/B,MAAMiG,EAAMjL,KAAK8F,QAAQwF,WAAWtG,GACzB,MAAPiG,GAAenF,EAAQ3C,KAAK8H,MAGnCjL,KAAK6E,KAAKsE,OAAS,IAAIgB,QAASnF,IAC7B,MAAMiG,EAAMjL,KAAK8F,QAAQyF,kBAAkBvG,GAChC,MAAPiG,GAAenF,EAAQ3C,QAAQ8H,KAGhB,IAAnBnF,EAAQ1F,aAEFoB,QAAQqG,IAAI/B,EAAQkC,IAAWpL,GAAKsL,EAAArJ,UAAAmB,UAAA,qBACtC,aAAMA,KAAK4F,QAAQ4F,eAAexL,KAAK6E,KAAMhI,MAAQ,GAAID,EAAGW,OAGhEyC,KAAKqF,OAAOmD,MAAM,uCAvS1BN,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,mJAwCbvD,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,sJAuBbvD,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,0EACoBnH,EAAAqB,6BAA4B7F,oFAgB7DoI,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,0EAC6BnH,EAAAoH,wBAAuB1O,wFAuBjEkL,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,0EACgCnH,EAAAyB,qBAAoB/I,6FA2BjEkL,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,iLAyEbvD,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,uKA0CbvD,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,iLAmBbvD,EAAAxJ,WAAA,CADC4F,EAAAmH,aAAY,oLA2CjBpP,EAAOD,QAAUsI,mBClVjBrI,EAAAD,QAAA+H,QAAA,2BCAA9H,EAAAD,QAAA+H,QAAA,kCCAA9H,EAAAD,QAAA+H,QAAA,0BCAA9H,EAAAD,QAAA+H,QAAA","file":"drivers/virtual-thermostat/device.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 207);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","module.exports = require(\"tsyringe\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"@app/model\");","// must not be removed\nimport \"reflect-metadata\";\n// position must not be changed\n\nimport { AsyncDebounce } from \"@app/helper\";\nimport { ICalculatedTemperature, IHeatingPlan, NormalOperationMode, ThermostatMode } from \"@app/model\";\nimport {\n    AuditedDevice, BootStrapper, CapabilityChangedEventArgs, CapabilityType, DeviceManagerService,\n    FlowService, HeatingManagerService, HeatingPlanRepositoryService,\n    HeatingSchedulerService, ILogger, InternalSettings, LoggerFactory, PlanChangeEventType,\n    PlansAppliedEventArgs, PlansChangedEventArgs, SettingsManagerService, trycatchlog,\n} from \"@app/services\";\nimport { __, Device } from \"homey\";\nimport { filter, find } from \"lodash\";\nimport { IEventHandler } from \"ste-events\";\nimport { container } from \"tsyringe\";\nimport { IVirtualThermostat } from \"../types\";\n\ntype Data = {\n    id: string;\n};\n\nclass VirtualThermostat extends Device implements IVirtualThermostat {\n    private devices!: DeviceManagerService;\n    private repository!: HeatingPlanRepositoryService;\n    private manager!: HeatingManagerService;\n\n    private flow!: FlowService;\n    private logger!: ILogger;\n    private id!: string;\n\n    private plan: IHeatingPlan | undefined = undefined;\n\n    private repositoryChanged!: IEventHandler<HeatingPlanRepositoryService, PlansChangedEventArgs>;\n    private capabilitiesChanged!: IEventHandler<DeviceManagerService, CapabilityChangedEventArgs>;\n    private plansApplied!: IEventHandler<HeatingManagerService, PlansAppliedEventArgs>;\n\n    @trycatchlog(true)\n    public async onInit() {\n        await BootStrapper();\n        this.id = this.getData<Data>().id; // handback from initialization\n\n        const factory = container.resolve<LoggerFactory>(LoggerFactory);\n        this.logger = factory.createLogger(\"Device\").createSubLogger(!__PRODUCTION__ ? this.getName() : this.id);\n        this.logger.information(`Init for device ${this.getName()}`);\n\n        // services\n        this.repository = container.resolve<HeatingPlanRepositoryService>(HeatingPlanRepositoryService);\n        this.manager = container.resolve<HeatingManagerService>(HeatingManagerService);\n        this.devices = container.resolve<DeviceManagerService>(DeviceManagerService);\n        this.flow = container.resolve<FlowService>(\"FlowService\");\n\n        const settings = container.resolve<SettingsManagerService>(SettingsManagerService);\n\n        // Capabilities\n        this.tryRegisterCapability(CapabilityType.TargetTemperature,\n            AsyncDebounce(this.onTargetTemperatureChanged.bind(this), settings.get<number>(InternalSettings.DriverDebounce, 5 * 1000)));\n\n        this.tryRegisterCapability(CapabilityType.ThermostatOverride,\n            AsyncDebounce(this.onThermostatModeChanged.bind(this), settings.get<number>(InternalSettings.DriverDebounce, 5 * 1000)));\n\n        this.repositoryChanged = this.plansChanged.bind(this);\n        this.capabilitiesChanged = this.capabilititesChanged.bind(this);\n        this.plansApplied = this.scheduleChanged.bind(this);\n\n        // Service hooks\n        this.repository.onChanged.subscribe(this.repositoryChanged);\n        this.devices.onCapabilityChanged.subscribe(this.capabilitiesChanged);\n        this.manager.onPlansApplied.subscribe(this.plansApplied);\n\n        // Update values\n        this.plan = await this.repository.find(this.id);\n        await this.updateCapabilitiesFromPlan();\n        await this.updateTemperature();\n    }\n\n    @trycatchlog(true)\n    public async onDeleted() {\n        this.repository.onChanged.unsubscribe(this.repositoryChanged);\n        this.devices.onCapabilityChanged.unsubscribe(this.capabilitiesChanged);\n        this.manager.onPlansApplied.unsubscribe(this.plansApplied);\n\n        this.plan = undefined;\n        delete this.devices;\n        delete this.repository;\n        delete this.manager;\n\n        this.logger.information(`was removed`);\n    }\n\n    public async changeThermostatMode(mode: ThermostatMode | NormalOperationMode) {\n        // conversion forward, backward, ...\n        await this.onThermostatModeChanged(mode.toString(), null);\n    }\n\n    /**\n     * Plans in the repository changed\n     */\n    @trycatchlog(true)\n    private async plansChanged(_rep: HeatingPlanRepositoryService, plans: PlansChangedEventArgs) {\n        await Promise.all(plans.filter((pc) => pc.plan.id === this.id).map(async (change) => {\n            // if the plan was removed => we are null\n            this.plan = change.event === PlanChangeEventType.Removed ? undefined : change.plan;\n            this.logger.information(`plan was ${PlanChangeEventType[change.event]}`);\n\n            // must be processed, we don't care\n            await this.updateCapabilitiesFromPlan();\n            await this.updateTemperature();\n        }));\n    }\n\n    /**\n     * Plan was applied\n     */\n    @trycatchlog(true)\n    private async scheduleChanged(_scheduler: HeatingSchedulerService, evt: PlansAppliedEventArgs) {\n        // we are removed\n        if (this.plan == null) { return; }\n\n        // not for us\n        if (!find(evt.plans, (p) => p.id === this.id)) {\n            return;\n        }\n\n        this.logger.debug(`Plans applied - received new schedule`);\n        const calculation = filter(evt.schedule, (f) => f.plan.id === this.id);\n        await this.updateTemperature(calculation);\n\n        if (calculation.length > 0) {\n            await this.doSetCapbilityValue(CapabilityType.TargetTemperature,\n                this.adjustTemperatureValue(calculation[0].targetTemperature));\n        }\n    }\n\n    /**\n     * A device's capability changed\n     */\n    @trycatchlog(true)\n    private async capabilititesChanged(_devices: DeviceManagerService, evt: CapabilityChangedEventArgs) {\n        // we are removed\n        if (this.plan == null) { return; }\n\n        // not interested in other changes\n        if (evt.capability !== CapabilityType.MeasureTemperature) {\n            return;\n        }\n\n        // device belongs to us, or our zones\n        let found = find(this.plan.devices || [], (id) => id === evt.device.id);\n        found = found || find(this.plan.zones || [], (id) => id === evt.device.zone);\n\n        if (found) {\n            this.logger.debug(`${CapabilityType.MeasureTemperature} changed`);\n            await this.updateTemperature();\n        }\n    }\n\n    /**\n     * Try to register the given capability with the device. If the capability is not available,\n     * the error is logged.\n     *\n     * @param capability The one\n     * @param callback The for the capability\n     */\n    @trycatchlog(true)\n    private async tryRegisterCapability(capability: CapabilityType, callback: (val: any, opts: CallableFunction) => Promise<void>) {\n        if (!find(this.getCapabilities(), (c) => c === capability)) {\n            this.logger.information(`does not have ${capability} - cannot register listener`);\n        } else {\n            this.logger.information(`attached listener for ${capability}`);\n\n            // this.capabilityListeners[capability] = callback;\n            await this.registerCapabilityListener(capability, callback);\n        }\n    }\n\n    /**\n     * Onyl sets the value if the capabilities value is different.\n     *\n     * @param type The one\n     * @param val The value to set/check\n     */\n    private async doSetCapbilityValue<T extends string | number | boolean>(type: CapabilityType, val: T): Promise<boolean> {\n        if (await this.getCapabilityValue(type) !== val) {\n            this.logger.information(`Set ${type} = ${val}`);\n            await this.setCapabilityValue(type, val);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Convert the number in target_temperature range.\n     * @param num value\n     */\n    private adjustTemperatureValue(num: number) {\n        // two digits from 4 to 35\n        return Math.round(Math.min(Math.max(4, num), 35) * 100) / 100;\n    }\n\n    /**\n     * Update this device's temperature if we are part of the calculation\n     * applied.\n     *\n     * @param calculation If the value is null, the plan is evaluated with the manager\n     */\n    private async updateTemperature(calculation?: ICalculatedTemperature[]) {\n        if (this.plan == null) { return; }\n\n        this.logger.debug(`Updating ${CapabilityType.MeasureTemperature}`);\n        if (calculation == null) { calculation = this.manager.evaluatePlan(this.plan); }\n\n        // nothing to do\n        if (calculation.length === 0) {\n            return;\n        }\n\n        let sum: number = 0;\n        calculation.forEach((v) => {\n            sum += v.temperature || 0;\n        });\n\n        // we take the target if we don't have readings\n        if (sum === 0) { sum = this.adjustTemperatureValue(calculation[0].targetTemperature); }\n\n        sum = this.adjustTemperatureValue(calculation.length === 0 ? 0 : sum / calculation.length);\n        this.logger.debug(`Calculated temperature`, sum);\n\n        await this.doSetCapbilityValue(CapabilityType.MeasureTemperature, sum);\n    }\n\n    /**\n     * Update all capabilities that depend on the plan.\n     */\n    @trycatchlog(true)\n    private async updateCapabilitiesFromPlan() {\n        this.logger.debug(`Updating ${CapabilityType.ThermostatOverride} and ${CapabilityType.TargetTemperature}`);\n\n        if (this.plan == null) {\n            this.logger.information(`Plan does not exist -> exit`);\n            await this.setUnavailable(__(\"Device.plan_removed\"));\n        } else {\n            this.logger.debug(`available? ${this.getAvailable()}`);\n            await this.unsetWarning();\n            await this.setAvailable();\n\n            // if the plan is disabled, thermostat goes to manual\n            let thermostatMode: (ThermostatMode | NormalOperationMode) = NormalOperationMode.Automatic;\n            if (!this.plan.enabled) {\n                thermostatMode = ThermostatMode.FullManual;\n            } else if (this.plan.thermostatMode != null) {\n                thermostatMode = this.plan.thermostatMode;\n            }\n\n            if (await this.doSetCapbilityValue(CapabilityType.ThermostatOverride, thermostatMode.toString())) {\n                await this.flow.thermostatModeChanged.trigger(this, {mode: __(`ThermostatMode.${thermostatMode}`)});\n            }\n\n            // need to filter out our own overrides\n            const dev = this.manager\n                .evaluatePlan(this.plan)\n                .filter((t) => t.thermostatMode === NormalOperationMode.Automatic);\n\n            if (dev.length > 0) {\n                await this.doSetCapbilityValue(CapabilityType.TargetTemperature, this.adjustTemperatureValue(dev[0].targetTemperature));\n            }\n        }\n    }\n\n    /**\n     * React to a thermostat mode change.\n     *\n     * @param value The mode\n     * @param opts unused\n     */\n    @trycatchlog(true)\n    private async onThermostatModeChanged(value: string, _opts: any) {\n        if (this.plan == null) { return; } // should not happen unavailable\n        this.logger.information(`${CapabilityType.ThermostatOverride} ${value}`);\n\n        const mode = parseInt(value, 10);\n        this.plan.thermostatMode = mode;\n\n        await this.repository.update(this.plan);\n        await this.flow.thermostatModeChanged.trigger(this, {mode: __(`ThermostatMode.${value}`)});\n    }\n\n    /**\n     * A temperature was read\n     *\n     * @param value The temperature\n     * @param opts unsused\n     */\n    @trycatchlog(true)\n    private async onTargetTemperatureChanged(value: number, _opts: any) {\n        if (this.plan == null) { return; } // should not happen unavailable\n\n        this.logger.information(`${CapabilityType.TargetTemperature} ${value}`);\n\n        if (this.plan.thermostatMode !== ThermostatMode.FullManual) {\n\n            if (this.plan.thermostatMode !== ThermostatMode.OverrideDay) {\n                this.plan.thermostatMode = ThermostatMode.OverrideDay;\n\n                // we're the only ones, that are interested in this change\n                this.repository.update(this.plan, false);\n            }\n\n            // ok, will only change if not like that\n            if (await this.doSetCapbilityValue(CapabilityType.ThermostatOverride, ThermostatMode.OverrideDay.toString())) {\n                await this.flow.thermostatModeChanged.trigger(this, {mode: __(`ThermostatMode.${ThermostatMode.OverrideDay}`)});\n            }\n        }\n\n        const devices: AuditedDevice[] = [];\n        (this.plan.devices || []).forEach((id) => {\n            const dev = this.devices.findDevice(id);\n            if (dev != null) { devices.push(dev); }\n        });\n\n        (this.plan.zones || []).forEach((id) => {\n            const dev = this.devices.getDevicesForZone(id);\n            if (dev != null) { devices.push(...dev); }\n        });\n\n        if (devices.length !== 0) {\n            // should debounce here\n            await Promise.all(devices.map(async (d) =>\n                await this.manager.setTemperature(this.plan!.name || \"\", d, value)),\n            );\n        } else {\n            this.logger.debug(`we don't have associated devices`);\n        }\n    }\n}\n\nmodule.exports = VirtualThermostat;\n","module.exports = require(\"lodash\");","module.exports = require(\"@app/services\");","module.exports = require(\"homey\");","module.exports = require(\"@app/helper\");"],"sourceRoot":""}